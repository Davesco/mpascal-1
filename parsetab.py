
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xdfU\x00\x8a&\x95!,\xe7\xda\xaa\xc6\xcf\xca\xeb\xa3'
    
_lr_action_items = {'DO':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,86,100,125,126,127,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,101,-54,-52,-53,-55,-47,-50,-46,-51,-49,-48,]),'LNOT':([59,70,85,87,102,103,],[85,85,85,85,85,85,]),'RETURN':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[71,71,-9,-15,-5,-8,-17,-14,-11,-10,-7,71,-6,-16,-13,-12,71,71,71,-32,71,-4,-41,-29,-39,-33,71,-30,-31,71,-3,-40,]),'LPAREN':([4,5,7,10,12,13,15,16,17,29,30,31,32,33,34,55,57,59,60,61,69,70,71,85,87,90,92,102,103,106,107,108,109,110,111,],[-66,8,16,-65,16,26,16,16,29,16,16,16,16,-67,16,16,83,87,89,29,92,87,16,87,87,16,16,87,87,16,16,16,16,16,16,]),'THEN':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,93,100,125,126,127,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,115,-54,-52,-53,-55,-47,-50,-46,-51,-49,-48,]),'READ':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[57,57,-9,-15,-5,-8,-17,-14,-11,-10,-7,57,-6,-16,-13,-12,57,57,57,-32,57,-4,-41,-29,-39,-33,57,-30,-31,57,-3,-40,]),'LOR':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,86,93,100,104,125,126,127,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,103,103,-54,103,-52,-53,-55,-47,-50,-46,-51,-49,-48,]),'WHILE':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[59,59,-9,-15,-5,-8,-17,-14,-11,-10,-7,59,-6,-16,-13,-12,59,59,59,-32,59,-4,-41,-29,-39,-33,59,-30,-31,59,-3,-40,]),'PRINT':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[60,60,-9,-15,-5,-8,-17,-14,-11,-10,-7,60,-6,-16,-13,-12,60,60,60,-32,60,-4,-41,-29,-39,-33,60,-30,-31,60,-3,-40,]),'MINUS':([4,7,9,11,12,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,41,43,44,45,46,53,54,55,59,70,71,80,85,87,88,90,92,94,102,103,105,106,107,108,109,110,111,113,114,128,129,130,131,132,133,],[-66,12,-37,-63,12,-57,12,12,-56,-62,31,-64,-35,-34,31,12,12,12,12,-67,12,-36,31,-45,-43,-42,-44,-58,-38,12,12,12,12,31,12,12,31,12,12,31,12,12,31,12,12,12,12,12,12,31,31,31,31,31,31,31,31,]),'STRING':([7,12,15,16,29,30,31,32,34,55,59,70,71,79,85,87,89,90,92,102,103,106,107,108,109,110,111,118,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BEGIN':([35,48,50,78,101,115,117,143,147,],[47,-19,77,-18,122,122,-20,122,-21,]),'LE':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,111,111,]),'RPAREN':([4,8,9,10,11,14,17,18,20,21,22,23,25,27,28,29,33,38,39,40,41,42,43,44,45,46,51,52,53,54,80,99,100,104,105,112,114,120,125,126,127,128,129,130,131,132,133,],[-66,-68,-37,-65,-63,-57,-56,-62,-64,-25,35,-26,-35,-34,39,-68,-67,53,-36,54,-60,-61,-45,-43,-42,-44,-24,-27,-58,-38,-59,121,-54,127,39,134,136,-28,-52,-53,-55,-47,-50,-46,-51,-49,-48,]),'SEMI':([4,9,10,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,58,68,72,94,96,113,121,134,136,144,],[-66,-37,-65,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,84,91,95,116,117,135,139,141,142,147,]),'NE':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,109,109,]),'LT':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,108,108,]),'PLUS':([4,7,9,11,12,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,41,43,44,45,46,53,54,55,59,70,71,80,85,87,88,90,92,94,102,103,105,106,107,108,109,110,111,113,114,128,129,130,131,132,133,],[-66,15,-37,-63,15,-57,15,15,-56,-62,32,-64,-35,-34,32,15,15,15,15,-67,15,-36,32,-45,-43,-42,-44,-58,-38,15,15,15,15,32,15,15,32,15,15,32,15,15,32,15,15,15,15,15,15,32,32,32,32,32,32,32,32,]),'COLON':([4,24,33,49,],[-66,37,-67,76,]),'ASSIGN':([4,33,61,],[-66,-67,90,]),'$end':([1,3,6,81,119,],[-2,0,-1,-23,-22,]),'GT':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,106,106,]),'END':([56,62,63,64,65,66,67,73,74,75,82,84,91,95,97,116,123,124,135,137,139,140,141,142,145,146,],[81,-9,-15,-5,-8,-17,-14,-11,-10,-7,-6,-16,-13,-12,119,-32,-4,-41,-29,-39,-33,145,-30,-31,-3,-40,]),'DIVIDE':([4,9,11,14,17,18,19,20,25,27,28,33,39,41,43,44,45,46,53,54,80,88,94,105,113,114,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,30,-64,-35,-34,30,-67,-36,30,-45,30,30,-44,-58,-38,30,30,30,30,30,30,30,30,30,30,30,30,]),'SKIP':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[68,68,-9,-15,-5,-8,-17,-14,-11,-10,-7,68,-6,-16,-13,-12,68,68,68,-32,68,-4,-41,-29,-39,-33,68,-30,-31,68,-3,-40,]),'TIMES':([4,9,11,14,17,18,19,20,25,27,28,33,39,41,43,44,45,46,53,54,80,88,94,105,113,114,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,34,-64,-35,-34,34,-67,-36,34,-45,34,34,-44,-58,-38,34,34,34,34,34,34,34,34,34,34,34,34,]),'WRITE':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[69,69,-9,-15,-5,-8,-17,-14,-11,-10,-7,69,-6,-16,-13,-12,69,69,69,-32,69,-4,-41,-29,-39,-33,69,-30,-31,69,-3,-40,]),'GE':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,110,110,]),'LAND':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,86,93,100,104,125,126,127,128,129,130,131,132,133,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,102,102,-54,102,-52,102,-55,-47,-50,-46,-51,-49,-48,]),'FUNC':([0,1,3,6,81,119,],[2,-2,2,-1,-23,-22,]),'INTEGER':([7,12,15,16,29,30,31,32,34,55,59,70,71,79,85,87,89,90,92,102,103,106,107,108,109,110,111,118,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ELSE':([62,63,65,66,67,73,74,75,84,91,95,116,123,124,135,137,139,141,142,145,146,],[-9,-15,-8,-17,-14,-11,-10,-7,-16,-13,-12,-32,-4,-41,-29,143,-33,-30,-31,-3,-40,]),'EQ':([4,9,11,14,17,18,20,25,27,33,39,43,44,45,46,53,54,88,105,],[-66,-37,-63,-57,-56,-62,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,107,107,]),'ID':([2,7,8,12,15,16,26,29,30,31,32,34,35,36,47,48,50,55,56,59,62,63,64,65,66,67,70,71,73,74,75,77,78,82,83,84,85,87,90,91,92,95,97,101,102,103,106,107,108,109,110,111,115,116,117,122,123,124,135,137,139,140,141,142,143,145,146,147,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-19,4,4,4,4,-9,-15,-5,-8,-17,-14,4,4,-11,-10,-7,4,-18,-6,4,-16,4,4,4,-13,4,-12,4,4,4,4,4,4,4,4,4,4,4,-32,-20,4,-4,-41,-29,-39,-33,4,-30,-31,4,-3,-40,-21,]),'IF':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[70,70,-9,-15,-5,-8,-17,-14,-11,-10,-7,70,-6,-16,-13,-12,70,70,70,-32,70,-4,-41,-29,-39,-33,70,-30,-31,70,-3,-40,]),'LBRACKET':([4,10,52,96,],[7,-65,79,118,]),'FLOAT':([7,12,15,16,29,30,31,32,34,55,59,70,71,79,85,87,89,90,92,102,103,106,107,108,109,110,111,118,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BREAK':([47,56,62,63,64,65,66,67,73,74,75,77,82,84,91,95,97,101,115,116,122,123,124,135,137,139,140,141,142,143,145,146,],[72,72,-9,-15,-5,-8,-17,-14,-11,-10,-7,72,-6,-16,-13,-12,72,72,72,-32,72,-4,-41,-29,-39,-33,72,-30,-31,72,-3,-40,]),'TYPENAME':([7,12,15,16,29,30,31,32,34,37,55,59,70,71,76,85,87,90,92,102,103,106,107,108,109,110,111,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'RBRACKET':([4,9,11,14,17,18,19,20,25,27,33,39,43,44,45,46,53,54,98,138,],[-66,-37,-63,-57,-56,-62,33,-64,-35,-34,-67,-36,-45,-43,-42,-44,-58,-38,120,144,]),'COMMA':([4,8,9,10,11,14,17,18,20,21,22,23,25,27,29,33,39,40,41,42,43,44,45,46,51,52,53,54,80,120,],[-66,-68,-37,-65,-63,-57,-56,-62,-64,-25,36,-26,-35,-34,-68,-67,-36,55,-60,-61,-45,-43,-42,-44,-24,-27,-58,-38,-59,-28,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([47,77,122,],[56,97,140,]),'funcall':([7,12,15,16,29,30,31,32,34,47,55,56,59,70,71,77,85,87,90,92,97,101,102,103,106,107,108,109,110,111,115,122,140,143,],[9,9,9,9,9,9,9,9,9,58,9,58,9,9,9,58,9,9,9,9,58,58,9,9,9,9,9,9,9,9,58,58,58,58,]),'cond':([59,70,85,87,102,103,],[86,93,100,104,125,126,]),'if_else':([47,56,77,97,101,115,122,140,143,],[74,74,74,74,74,74,74,74,74,]),'id':([2,7,8,12,15,16,26,29,30,31,32,34,35,36,47,50,55,56,59,70,71,77,83,85,87,90,92,97,101,102,103,106,107,108,109,110,111,115,122,140,143,],[5,17,24,17,17,17,38,17,17,17,17,17,49,24,61,49,17,61,17,17,17,61,99,17,17,17,17,61,61,17,17,17,17,17,17,17,17,61,61,61,61,]),'locals':([35,],[50,]),'if':([47,56,77,97,101,115,122,140,143,],[62,62,62,62,62,62,62,62,62,]),'parameters':([8,],[22,]),'write':([47,56,77,97,101,115,122,140,143,],[63,63,63,63,63,63,63,63,63,]),'literal':([7,12,15,16,29,30,31,32,34,55,59,70,71,79,85,87,89,90,92,102,103,106,107,108,109,110,111,118,],[14,14,14,14,14,14,14,14,14,14,14,14,14,98,14,14,112,14,14,14,14,14,14,14,14,14,14,138,]),'program':([0,],[3,]),'statement':([47,56,77,97,101,115,122,140,143,],[64,82,64,82,123,123,64,82,123,]),'print':([47,56,77,97,101,115,122,140,143,],[65,65,65,65,65,65,65,65,65,]),'local':([35,50,],[48,78,]),'empty':([8,29,],[23,42,]),'function':([0,3,],[1,6,]),'return':([47,56,77,97,101,115,122,140,143,],[66,66,66,66,66,66,66,66,66,]),'read':([47,56,77,97,101,115,122,140,143,],[67,67,67,67,67,67,67,67,67,]),'exprlist':([29,],[40,]),'parm_declaration':([8,36,],[21,51,]),'st':([101,115,143,],[124,137,146,]),'typename':([7,12,15,16,29,30,31,32,34,37,55,59,70,71,76,85,87,90,92,102,103,106,107,108,109,110,111,],[13,13,13,13,13,13,13,13,13,52,13,13,13,13,96,13,13,13,13,13,13,13,13,13,13,13,13,]),'while':([47,56,77,97,101,115,122,140,143,],[73,73,73,73,73,73,73,73,73,]),'expression':([7,12,15,16,29,30,31,32,34,55,59,70,71,85,87,90,92,102,103,106,107,108,109,110,111,],[19,25,27,28,41,43,44,45,46,80,88,88,94,88,105,113,114,88,88,128,129,130,131,132,133,]),'assign':([47,56,77,97,101,115,122,140,143,],[75,75,75,75,75,75,75,75,75,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('st -> BEGIN statements END','st',3,'p_st','mpasparse.py',31),
  ('st -> statement','st',1,'p_st_1','mpasparse.py',37),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',43),
  ('statements -> statements statement','statements',2,'p_statements_1','mpasparse.py',51),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',59),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',60),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',61),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',62),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',63),
  ('statement -> BREAK SEMI','statement',2,'p_statement','mpasparse.py',64),
  ('statement -> SKIP SEMI','statement',2,'p_statement','mpasparse.py',65),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',66),
  ('statement -> write','statement',1,'p_statement','mpasparse.py',67),
  ('statement -> funcall SEMI','statement',2,'p_statement','mpasparse.py',68),
  ('statement -> return','statement',1,'p_statement','mpasparse.py',69),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',81),
  ('locals -> local','locals',1,'p_locals_1','mpasparse.py',90),
  ('local -> id COLON typename SEMI','local',4,'p_local','mpasparse.py',96),
  ('local -> id COLON typename LBRACKET literal RBRACKET SEMI','local',7,'p_local_2','mpasparse.py',102),
  ('function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',108),
  ('function -> FUNC id LPAREN parameters RPAREN BEGIN statements END','function',8,'p_fundecl_1','mpasparse.py',116),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',122),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',129),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',130),
  ('parm_declaration -> id COLON typename','parm_declaration',3,'p_parm_declaration','mpasparse.py',136),
  ('parm_declaration -> id COLON typename LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',142),
  ('assign -> id ASSIGN expression SEMI','assign',4,'p_assign','mpasparse.py',148),
  ('print -> PRINT LPAREN literal RPAREN SEMI','print',5,'p_print','mpasparse.py',154),
  ('write -> WRITE LPAREN expression RPAREN SEMI','write',5,'p_write','mpasparse.py',160),
  ('return -> RETURN expression SEMI','return',3,'p_return','mpasparse.py',166),
  ('read -> READ LPAREN id RPAREN SEMI','read',5,'p_read','mpasparse.py',172),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',178),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',179),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',186),
  ('expression -> funcall','expression',1,'p_expression_funcall','mpasparse.py',192),
  ('funcall -> id LPAREN exprlist RPAREN','funcall',4,'p_expression_funcall_1','mpasparse.py',198),
  ('if -> IF cond THEN st','if',4,'p_if','mpasparse.py',204),
  ('if_else -> IF cond THEN st ELSE st','if_else',6,'p_if_else','mpasparse.py',210),
  ('while -> WHILE cond DO st','while',4,'p_while','mpasparse.py',216),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',222),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',223),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',224),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',225),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',239),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',240),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',241),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',242),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',243),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',244),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',263),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',264),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',265),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond_1','mpasparse.py',288),
  ('expression -> id','expression',1,'p_expression_1','mpasparse.py',294),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',295),
  ('expression -> typename LPAREN id RPAREN','expression',4,'p_expression_2','mpasparse.py',301),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',307),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',314),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','mpasparse.py',315),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',323),
  ('literal -> FLOAT','literal',1,'p_literal','mpasparse.py',324),
  ('literal -> STRING','literal',1,'p_literal','mpasparse.py',325),
  ('typename -> TYPENAME','typename',1,'p_typename','mpasparse.py',331),
  ('id -> ID','id',1,'p_id','mpasparse.py',337),
  ('id -> ID LBRACKET expression RBRACKET','id',4,'p_id_2','mpasparse.py',343),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',349),
]
