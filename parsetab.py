
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x18\xfe5\x82G\x8f`\xd6\xf0\x12\x91\xf2G\xb6\xc1\x04'
    
_lr_action_items = {'THEN':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,87,91,109,110,111,112,113,114,115,116,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-48,-49,105,-47,-46,-45,-40,-43,-39,-44,-42,-41,]),'LNOT':([61,70,78,93,94,],[78,78,78,78,78,]),'LPAREN':([4,5,7,9,11,12,15,16,17,29,30,31,32,33,34,53,60,61,62,70,78,80,83,84,93,94,95,96,97,98,99,100,],[-60,8,16,-59,16,26,16,16,29,16,16,16,16,-61,16,16,77,16,83,16,16,29,16,16,16,16,16,16,16,16,16,16,]),'READ':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,54,63,65,66,67,68,69,71,72,73,79,80,81,85,86,91,92,103,104,105,109,110,111,112,113,114,115,116,118,119,121,122,123,125,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,60,-10,-9,-62,-3,-8,-13,-12,-11,-7,60,-48,-49,-6,60,-47,-34,-5,-4,60,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,60,-33,]),'LOR':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,79,80,81,87,91,109,110,111,112,113,114,115,116,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,93,-48,-49,93,-47,-46,-45,-40,-43,-39,-44,-42,-41,]),'WHILE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,54,63,65,66,67,68,69,71,72,73,79,80,81,85,86,91,92,103,104,105,109,110,111,112,113,114,115,116,118,119,121,122,123,125,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,61,-10,-9,-62,-3,-8,-13,-12,-11,-7,61,-48,-49,-6,61,-47,-34,-5,-4,61,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,61,-33,]),'PRINT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,54,63,65,66,67,68,69,71,72,73,79,80,81,85,86,91,92,103,104,105,109,110,111,112,113,114,115,116,118,119,121,122,123,125,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,62,-10,-9,-62,-3,-8,-13,-12,-11,-7,62,-48,-49,-6,62,-47,-34,-5,-4,62,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,62,-33,]),'MINUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,40,42,43,44,45,46,51,52,53,58,61,70,78,80,81,82,83,84,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,],[-60,11,-56,11,-51,-58,11,11,-50,-55,31,-57,-28,-27,31,11,11,11,11,-61,11,-29,-31,31,-38,-36,-35,-37,-52,-30,11,31,11,11,11,-50,-51,31,11,11,11,11,11,11,11,11,11,11,31,31,31,31,31,31,31,31,]),'STRING':([7,11,15,16,29,30,31,32,34,53,57,61,70,78,83,84,93,94,95,96,97,98,99,100,107,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BEGIN':([4,10,13,14,17,18,20,25,27,33,35,39,40,43,44,45,46,47,48,51,52,54,55,79,80,81,91,105,106,109,110,111,112,113,114,115,116,123,126,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-62,-29,-31,-38,-36,-35,-37,-15,54,-52,-30,66,-14,66,-48,-49,-47,66,-16,-46,-45,-40,-43,-39,-44,-42,-41,66,-17,]),'LAND':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,79,80,81,87,91,109,110,111,112,113,114,115,116,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,94,-48,-49,94,-47,94,-45,-40,-43,-39,-44,-42,-41,]),'RPAREN':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,28,29,33,38,39,40,41,42,43,44,45,46,49,50,51,52,58,89,90,101,],[-60,-62,-59,-56,-51,-58,-50,-55,-57,-20,35,-21,-28,-27,39,40,-61,51,-29,-31,52,-54,-38,-36,-35,-37,-19,-22,-52,-30,-53,-23,108,117,]),'SEMI':([4,9,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,88,102,108,117,124,],[-60,-59,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,106,118,121,122,126,]),'NE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,98,]),'LT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,97,]),'PLUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,40,42,43,44,45,46,51,52,53,58,61,70,78,80,81,82,83,84,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,],[-60,15,-56,15,-51,-58,15,15,-50,-55,32,-57,-28,-27,32,15,15,15,15,-61,15,-29,-31,32,-38,-36,-35,-37,-52,-30,15,32,15,15,15,-50,-51,32,15,15,15,15,15,15,15,15,15,15,32,32,32,32,32,32,32,32,]),'COLON':([4,24,33,56,],[-60,37,-61,74,]),'ASSIGN':([4,33,64,],[-60,-61,84,]),'$end':([1,3,6,76,],[-2,0,-1,-18,]),'GT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,95,]),'END':([59,63,65,66,67,68,69,71,72,73,85,86,92,103,104,118,119,121,122,125,],[76,-10,-9,-62,-3,-8,-13,-12,-11,-7,-6,104,-34,-5,-4,-24,-32,-26,-25,-33,]),'DIVIDE':([4,10,13,14,17,18,19,20,25,27,28,33,39,40,42,43,44,45,46,51,52,58,80,81,82,101,102,111,112,113,114,115,116,],[-60,-56,-51,-58,-50,-55,30,-57,-28,-27,30,-61,-29,-31,30,-38,30,30,-37,-52,-30,30,-50,-51,30,30,30,30,30,30,30,30,30,]),'TIMES':([4,10,13,14,17,18,19,20,25,27,28,33,39,40,42,43,44,45,46,51,52,58,80,81,82,101,102,111,112,113,114,115,116,],[-60,-56,-51,-58,-50,-55,34,-57,-28,-27,34,-61,-29,-31,34,-38,34,34,-37,-52,-30,34,-50,-51,34,34,34,34,34,34,34,34,34,]),'GE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,99,]),'LE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,100,]),'FUNC':([0,1,3,6,76,],[2,-2,2,-1,-18,]),'INTEGER':([7,11,15,16,29,30,31,32,34,53,57,61,70,78,83,84,93,94,95,96,97,98,99,100,107,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ELSE':([63,65,67,68,69,71,72,73,92,104,118,119,121,122,125,],[-10,-9,-3,-8,-13,-12,-11,-7,-34,-4,-24,123,-26,-25,-33,]),'EQ':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,80,81,82,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,-50,-51,96,]),'ID':([2,4,7,8,10,11,13,14,15,16,17,18,20,25,26,27,29,30,31,32,33,34,35,36,39,40,43,44,45,46,47,48,51,52,53,54,55,61,63,65,66,67,68,69,70,71,72,73,77,78,79,80,81,83,84,85,86,91,92,93,94,95,96,97,98,99,100,103,104,105,106,109,110,111,112,113,114,115,116,118,119,121,122,123,125,126,],[4,-60,4,4,-56,4,-51,-58,4,4,-50,-55,-57,-28,4,-27,4,4,4,4,-61,4,-62,4,-29,-31,-38,-36,-35,-37,-15,4,-52,-30,4,4,-14,4,-10,-9,-62,-3,-8,-13,4,-12,-11,-7,4,4,4,-48,-49,4,4,-6,4,-47,-34,4,4,4,4,4,4,4,4,-5,-4,4,-16,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,4,-33,-17,]),'IF':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,54,63,65,66,67,68,69,71,72,73,79,80,81,85,86,91,92,103,104,105,109,110,111,112,113,114,115,116,118,119,121,122,123,125,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,70,-10,-9,-62,-3,-8,-13,-12,-11,-7,70,-48,-49,-6,70,-47,-34,-5,-4,70,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,70,-33,]),'LBRACKET':([4,9,50,88,],[7,-59,57,107,]),'FLOAT':([7,11,15,16,29,30,31,32,34,53,57,61,70,78,83,84,93,94,95,96,97,98,99,100,107,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,51,52,54,63,65,66,67,68,69,71,72,73,79,80,81,85,86,91,92,103,104,105,109,110,111,112,113,114,115,116,118,119,121,122,123,125,],[-60,-56,-51,-58,-50,-55,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,71,-10,-9,-62,-3,-8,-13,-12,-11,-7,71,-48,-49,-6,71,-47,-34,-5,-4,71,-46,-45,-40,-43,-39,-44,-42,-41,-24,-32,-26,-25,71,-33,]),'TYPENAME':([7,11,15,16,29,30,31,32,34,37,53,61,70,74,78,83,84,93,94,95,96,97,98,99,100,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'BOOLEAN':([7,11,15,16,29,30,31,32,34,53,57,61,70,78,83,84,93,94,95,96,97,98,99,100,107,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RBRACKET':([4,10,13,14,17,18,19,20,25,27,33,39,40,43,44,45,46,51,52,75,120,],[-60,-56,-51,-58,-50,-55,33,-57,-28,-27,-61,-29,-31,-38,-36,-35,-37,-52,-30,89,124,]),'COMMA':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,33,39,40,41,42,43,44,45,46,49,50,51,52,58,89,],[-60,-62,-59,-56,-51,-58,-50,-55,-57,-20,36,-21,-28,-27,-61,-29,-31,53,-54,-38,-36,-35,-37,-19,-22,-52,-30,-53,-23,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([54,79,105,123,],[59,92,119,125,]),'cond':([61,70,78,93,94,],[79,87,91,109,110,]),'id':([2,7,8,11,15,16,26,29,30,31,32,34,36,48,53,54,61,70,77,78,79,83,84,86,93,94,95,96,97,98,99,100,105,123,],[5,17,24,17,17,17,38,17,17,17,17,17,24,56,17,64,80,80,90,80,64,17,17,64,80,80,17,17,17,17,17,17,64,64,]),'locals':([35,],[48,]),'if':([54,79,86,105,123,],[65,65,65,65,65,]),'parameters':([8,],[22,]),'literal':([7,11,15,16,29,30,31,32,34,53,57,61,70,78,83,84,93,94,95,96,97,98,99,100,107,],[13,13,13,13,13,13,13,13,13,13,75,81,81,81,13,13,81,81,13,13,13,13,13,13,120,]),'program':([0,],[3,]),'statement':([54,79,86,105,123,],[67,67,103,67,67,]),'print':([54,79,86,105,123,],[68,68,68,68,68,]),'local':([48,],[55,]),'empty':([8,35,66,],[23,47,85,]),'function':([0,3,],[1,6,]),'if_else':([54,79,86,105,123,],[63,63,63,63,63,]),'read':([54,79,86,105,123,],[69,69,69,69,69,]),'exprlist':([29,],[41,]),'parm_declaration':([8,36,],[21,49,]),'st':([66,],[86,]),'typename':([7,11,15,16,29,30,31,32,34,37,53,61,70,74,78,83,84,93,94,95,96,97,98,99,100,],[12,12,12,12,12,12,12,12,12,50,12,12,12,88,12,12,12,12,12,12,12,12,12,12,12,]),'while':([54,79,86,105,123,],[72,72,72,72,72,]),'expression':([7,11,15,16,29,30,31,32,34,53,61,70,78,83,84,93,94,95,96,97,98,99,100,],[19,25,27,28,42,43,44,45,46,58,82,82,82,101,102,82,82,111,112,113,114,115,116,]),'assign':([54,79,86,105,123,],[73,73,73,73,73,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',29),
  ('statements -> BEGIN st END','statements',3,'p_statements','mpasparse.py',30),
  ('st -> st statement','st',2,'p_st','mpasparse.py',39),
  ('st -> empty','st',1,'p_st','mpasparse.py',40),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',47),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',48),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',49),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',50),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',51),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',52),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',53),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',65),
  ('locals -> empty','locals',1,'p_locals_1','mpasparse.py',72),
  ('local -> id COLON typename SEMI','local',4,'p_local','mpasparse.py',78),
  ('local -> id COLON typename LBRACKET literal RBRACKET SEMI','local',7,'p_local_2','mpasparse.py',84),
  ('function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',90),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',96),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',103),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',104),
  ('parm_declaration -> id COLON typename','parm_declaration',3,'p_parm_declaration','mpasparse.py',110),
  ('parm_declaration -> id COLON typename LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',116),
  ('assign -> id ASSIGN expression SEMI','assign',4,'p_assign','mpasparse.py',122),
  ('print -> PRINT LPAREN expression RPAREN SEMI','print',5,'p_print','mpasparse.py',128),
  ('read -> READ LPAREN id RPAREN SEMI','read',5,'p_read','mpasparse.py',134),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',140),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',141),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',148),
  ('expression -> id LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','mpasparse.py',154),
  ('expression -> id LPAREN RPAREN','expression',3,'p_expression_funcall','mpasparse.py',155),
  ('if -> IF cond THEN statements','if',4,'p_if','mpasparse.py',164),
  ('if_else -> IF cond THEN statements ELSE statements','if_else',6,'p_if_else','mpasparse.py',170),
  ('while -> WHILE cond statements','while',3,'p_while','mpasparse.py',176),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',182),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',183),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',184),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',185),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',199),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',200),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',201),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',202),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',203),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',204),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',223),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',224),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',225),
  ('cond -> id','cond',1,'p_cond_1','mpasparse.py',237),
  ('cond -> literal','cond',1,'p_cond_1','mpasparse.py',238),
  ('expression -> id','expression',1,'p_expression_1','mpasparse.py',244),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',245),
  ('expression -> typename LPAREN id RPAREN','expression',4,'p_expression_2','mpasparse.py',251),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',257),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',264),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',270),
  ('literal -> FLOAT','literal',1,'p_literal','mpasparse.py',271),
  ('literal -> STRING','literal',1,'p_literal','mpasparse.py',272),
  ('literal -> BOOLEAN','literal',1,'p_literal','mpasparse.py',273),
  ('typename -> TYPENAME','typename',1,'p_typename','mpasparse.py',279),
  ('id -> ID','id',1,'p_id','mpasparse.py',285),
  ('id -> ID LBRACKET expression RBRACKET','id',4,'p_id_2','mpasparse.py',291),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',297),
]
