
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '[\x9a\xcf\xd4\xd5\x85B\xe7\xeeQ\xccH\xc8I\xe3\xc4'
    
_lr_action_items = {'THEN':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,83,88,110,112,113,114,115,116,117,118,119,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,104,-47,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'LNOT':([57,65,77,79,89,91,],[77,77,77,77,77,77,]),'LPAREN':([4,5,7,9,11,12,14,15,16,28,29,30,31,32,33,54,56,57,58,65,77,79,81,82,89,91,96,97,98,99,100,101,],[-59,8,15,-58,15,25,15,15,28,15,15,15,15,-60,15,15,76,79,81,79,79,79,15,15,79,79,15,15,15,15,15,15,]),'READ':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,46,52,53,55,59,61,62,63,64,66,67,68,70,74,78,85,88,90,92,93,104,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,56,-51,-31,56,-10,-9,-5,-8,-13,-12,-11,-7,56,-6,56,56,-47,56,-4,-34,56,-46,56,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,56,-33,]),'LOR':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,78,83,88,94,110,112,113,114,115,116,117,118,119,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,89,89,-47,89,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'WHILE':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,46,52,53,55,59,61,62,63,64,66,67,68,70,74,78,85,88,90,92,93,104,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,57,-51,-31,57,-10,-9,-5,-8,-13,-12,-11,-7,57,-6,57,57,-47,57,-4,-34,57,-46,57,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,57,-33,]),'PRINT':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,46,52,53,55,59,61,62,63,64,66,67,68,70,74,78,85,88,90,92,93,104,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,58,-51,-31,58,-10,-9,-5,-8,-13,-12,-11,-7,58,-6,58,58,-47,58,-4,-34,58,-46,58,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,58,-33,]),'MINUS':([4,7,10,11,13,14,15,16,17,18,19,24,26,27,28,29,30,31,32,33,38,40,42,43,44,45,52,53,54,57,65,73,77,79,80,81,82,89,91,95,96,97,98,99,100,101,102,103,114,115,116,117,118,119,],[-59,11,-56,11,-50,11,11,-49,-55,30,-57,-29,-28,30,11,11,11,11,-60,11,-30,30,-38,-36,-35,-37,-51,-31,11,11,11,30,11,11,30,11,11,11,11,30,11,11,11,11,11,11,30,30,30,30,30,30,30,30,]),'STRING':([7,11,14,15,28,29,30,31,33,54,57,65,72,77,79,81,82,89,91,96,97,98,99,100,101,106,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'BEGIN':([4,10,13,16,17,19,24,26,32,34,38,42,43,44,45,47,49,52,53,71,78,88,104,105,110,112,113,114,115,116,117,118,119,127,130,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,46,-30,-38,-36,-35,-37,-15,70,-51,-31,-14,90,-47,90,-16,-46,-45,-48,-40,-43,-39,-44,-42,-41,90,-17,]),'LE':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,101,101,]),'RPAREN':([4,8,9,10,13,16,17,19,20,21,22,24,26,27,28,32,37,38,39,40,41,42,43,44,45,50,51,52,53,73,87,88,94,95,102,108,110,112,113,114,115,116,117,118,119,],[-59,-61,-58,-56,-50,-49,-55,-57,-21,34,-22,-29,-28,38,-61,-60,52,-30,53,-53,-54,-38,-36,-35,-37,-20,-23,-51,-31,-52,109,-47,113,38,120,-24,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'SEMI':([4,9,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,84,103,109,120,128,],[-59,-58,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,105,121,124,126,130,]),'NE':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,99,99,]),'LT':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,98,98,]),'COLON':([4,23,32,48,],[-59,36,-60,69,]),'PLUS':([4,7,10,11,13,14,15,16,17,18,19,24,26,27,28,29,30,31,32,33,38,40,42,43,44,45,52,53,54,57,65,73,77,79,80,81,82,89,91,95,96,97,98,99,100,101,102,103,114,115,116,117,118,119,],[-59,14,-56,14,-50,14,14,-49,-55,31,-57,-29,-28,31,14,14,14,14,-60,14,-30,31,-38,-36,-35,-37,-51,-31,14,14,14,31,14,14,31,14,14,14,14,31,14,14,14,14,14,14,31,31,31,31,31,31,31,31,]),'ASSIGN':([4,32,60,],[-59,-60,82,]),'$end':([1,3,6,75,107,],[-2,0,-1,-19,-18,]),'GT':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,96,96,]),'END':([55,59,61,62,63,64,66,67,68,74,85,92,93,111,121,122,124,125,126,129,],[75,-10,-9,-5,-8,-13,-12,-11,-7,-6,107,-4,-34,125,-25,-32,-27,-3,-26,-33,]),'DIVIDE':([4,10,13,16,17,18,19,24,26,27,32,38,40,42,43,44,45,52,53,73,80,95,102,103,114,115,116,117,118,119,],[-59,-56,-50,-49,-55,29,-57,-29,-28,29,-60,-30,29,-38,29,29,-37,-51,-31,29,29,29,29,29,29,29,29,29,29,29,]),'TIMES':([4,10,13,16,17,18,19,24,26,27,32,38,40,42,43,44,45,52,53,73,80,95,102,103,114,115,116,117,118,119,],[-59,-56,-50,-49,-55,33,-57,-29,-28,33,-60,-30,33,-38,33,33,-37,-51,-31,33,33,33,33,33,33,33,33,33,33,33,]),'GE':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,100,100,]),'LAND':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,78,83,88,94,110,112,113,114,115,116,117,118,119,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,91,91,-47,91,91,-45,-48,-40,-43,-39,-44,-42,-41,]),'FUNC':([0,1,3,6,75,107,],[2,-2,2,-1,-19,-18,]),'INTEGER':([7,11,14,15,28,29,30,31,33,54,57,65,72,77,79,81,82,89,91,96,97,98,99,100,101,106,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ELSE':([59,61,63,64,66,67,68,92,93,121,122,124,125,126,129,],[-10,-9,-8,-13,-12,-11,-7,-4,-34,-25,127,-27,-3,-26,-33,]),'EQ':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,52,53,80,95,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,97,97,]),'ID':([2,4,7,8,10,11,13,14,15,16,17,19,24,25,26,28,29,30,31,32,33,34,35,38,42,43,44,45,46,47,49,52,53,54,55,57,59,61,62,63,64,65,66,67,68,70,71,74,76,77,78,79,81,82,85,88,89,90,91,92,93,96,97,98,99,100,101,104,105,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,130,],[4,-59,4,4,-56,4,-50,4,4,-49,-55,-57,-29,4,-28,4,4,4,4,-60,4,4,4,-30,-38,-36,-35,-37,4,-15,4,-51,-31,4,4,4,-10,-9,-5,-8,-13,4,-12,-11,-7,4,-14,-6,4,4,4,4,4,4,4,-47,4,4,4,-4,-34,4,4,4,4,4,4,4,-16,-46,4,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,4,-33,-17,]),'IF':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,46,52,53,55,59,61,62,63,64,66,67,68,70,74,78,85,88,90,92,93,104,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,65,-51,-31,65,-10,-9,-5,-8,-13,-12,-11,-7,65,-6,65,65,-47,65,-4,-34,65,-46,65,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,65,-33,]),'LBRACKET':([4,9,51,84,],[7,-58,72,106,]),'FLOAT':([7,11,14,15,28,29,30,31,33,54,57,65,72,77,79,81,82,89,91,96,97,98,99,100,101,106,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([4,10,13,16,17,19,24,26,32,38,42,43,44,45,46,52,53,55,59,61,62,63,64,66,67,68,70,74,78,85,88,90,92,93,104,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,127,129,],[-59,-56,-50,-49,-55,-57,-29,-28,-60,-30,-38,-36,-35,-37,66,-51,-31,66,-10,-9,-5,-8,-13,-12,-11,-7,66,-6,66,66,-47,66,-4,-34,66,-46,66,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-3,-26,66,-33,]),'TYPENAME':([7,11,14,15,28,29,30,31,33,36,54,57,65,69,77,79,81,82,89,91,96,97,98,99,100,101,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'RBRACKET':([4,10,13,16,17,18,19,24,26,32,38,42,43,44,45,52,53,86,123,],[-59,-56,-50,-49,-55,32,-57,-29,-28,-60,-30,-38,-36,-35,-37,-51,-31,108,128,]),'COMMA':([4,8,9,10,13,16,17,19,20,21,22,24,26,28,32,38,39,40,41,42,43,44,45,50,51,52,53,73,108,],[-59,-61,-58,-56,-50,-49,-55,-57,-21,35,-22,-29,-28,-61,-60,-30,54,-53,-54,-38,-36,-35,-37,-20,-23,-51,-31,-52,-24,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([46,70,90,],[55,85,111,]),'cond':([57,65,77,79,89,91,],[78,83,88,94,110,112,]),'id':([2,7,8,11,14,15,25,28,29,30,31,33,34,35,46,49,54,55,57,65,70,76,77,78,79,81,82,85,89,90,91,96,97,98,99,100,101,104,111,127,],[5,16,23,16,16,16,37,16,16,16,16,16,48,23,60,48,16,60,16,16,60,87,16,60,16,16,16,60,16,60,16,16,16,16,16,16,16,60,60,60,]),'locals':([34,],[49,]),'if':([46,55,70,78,85,90,104,111,127,],[61,61,61,61,61,61,61,61,61,]),'parameters':([8,],[21,]),'literal':([7,11,14,15,28,29,30,31,33,54,57,65,72,77,79,81,82,89,91,96,97,98,99,100,101,106,],[13,13,13,13,13,13,13,13,13,13,13,13,86,13,13,13,13,13,13,13,13,13,13,13,13,123,]),'program':([0,],[3,]),'statement':([46,55,70,78,85,90,104,111,127,],[62,74,62,92,74,62,92,74,92,]),'print':([46,55,70,78,85,90,104,111,127,],[63,63,63,63,63,63,63,63,63,]),'local':([34,49,],[47,71,]),'empty':([8,28,],[22,41,]),'function':([0,3,],[1,6,]),'if_else':([46,55,70,78,85,90,104,111,127,],[59,59,59,59,59,59,59,59,59,]),'read':([46,55,70,78,85,90,104,111,127,],[64,64,64,64,64,64,64,64,64,]),'exprlist':([28,],[39,]),'parm_declaration':([8,35,],[20,50,]),'st':([78,104,127,],[93,122,129,]),'typename':([7,11,14,15,28,29,30,31,33,36,54,57,65,69,77,79,81,82,89,91,96,97,98,99,100,101,],[12,12,12,12,12,12,12,12,12,51,12,12,12,84,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([46,55,70,78,85,90,104,111,127,],[67,67,67,67,67,67,67,67,67,]),'expression':([7,11,14,15,28,29,30,31,33,54,57,65,77,79,81,82,89,91,96,97,98,99,100,101,],[18,24,26,27,40,42,43,44,45,73,80,80,80,95,102,103,80,80,114,115,116,117,118,119,]),'assign':([46,55,70,78,85,90,104,111,127,],[68,68,68,68,68,68,68,68,68,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('st -> BEGIN statements END','st',3,'p_st','mpasparse.py',31),
  ('st -> statement','st',1,'p_st_1','mpasparse.py',37),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',43),
  ('statements -> statements statement','statements',2,'p_statements_1','mpasparse.py',51),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',59),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',60),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',61),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',62),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',63),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',64),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',65),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',77),
  ('locals -> local','locals',1,'p_locals_1','mpasparse.py',86),
  ('local -> id COLON typename SEMI','local',4,'p_local','mpasparse.py',92),
  ('local -> id COLON typename LBRACKET literal RBRACKET SEMI','local',7,'p_local_2','mpasparse.py',98),
  ('function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',104),
  ('function -> FUNC id LPAREN parameters RPAREN BEGIN statements END','function',8,'p_fundecl_1','mpasparse.py',112),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',118),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',125),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',126),
  ('parm_declaration -> id COLON typename','parm_declaration',3,'p_parm_declaration','mpasparse.py',132),
  ('parm_declaration -> id COLON typename LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',138),
  ('assign -> id ASSIGN expression SEMI','assign',4,'p_assign','mpasparse.py',144),
  ('print -> PRINT LPAREN expression RPAREN SEMI','print',5,'p_print','mpasparse.py',150),
  ('read -> READ LPAREN id RPAREN SEMI','read',5,'p_read','mpasparse.py',156),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',162),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',163),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',170),
  ('expression -> id LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','mpasparse.py',176),
  ('if -> IF cond THEN st','if',4,'p_if','mpasparse.py',185),
  ('if_else -> IF cond THEN st ELSE st','if_else',6,'p_if_else','mpasparse.py',191),
  ('while -> WHILE cond st','while',3,'p_while','mpasparse.py',197),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',203),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',204),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',205),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',206),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',220),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',221),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',222),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',223),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',224),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',225),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',244),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',245),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',246),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond_1','mpasparse.py',269),
  ('expression -> id','expression',1,'p_expression_1','mpasparse.py',275),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',276),
  ('expression -> typename LPAREN id RPAREN','expression',4,'p_expression_2','mpasparse.py',282),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',288),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',295),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','mpasparse.py',296),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',304),
  ('literal -> FLOAT','literal',1,'p_literal','mpasparse.py',305),
  ('literal -> STRING','literal',1,'p_literal','mpasparse.py',306),
  ('typename -> TYPENAME','typename',1,'p_typename','mpasparse.py',312),
  ('id -> ID','id',1,'p_id','mpasparse.py',318),
  ('id -> ID LBRACKET expression RBRACKET','id',4,'p_id_2','mpasparse.py',324),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',330),
]
