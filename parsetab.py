
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '6\xb60k+<\x88\xd9\xbc\xa6R\xe3a\x1e!Z'
    
_lr_action_items = {'THEN':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,86,91,113,114,115,116,117,118,119,120,121,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,107,-47,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'LNOT':([58,67,78,80,93,94,],[78,78,78,78,78,78,]),'LPAREN':([4,5,7,9,11,12,15,16,17,29,30,31,32,33,34,55,57,58,59,67,78,80,82,83,93,94,97,98,99,100,101,102,],[-60,8,16,-59,16,26,16,16,29,16,16,16,16,-61,16,16,77,80,82,80,80,80,16,16,80,80,16,16,16,16,16,16,]),'READ':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,47,53,54,60,62,63,64,65,66,68,69,70,72,79,84,85,91,92,105,106,107,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,57,-51,-31,-10,-9,-62,-3,-8,-13,-12,-11,-7,57,57,-6,57,-47,-34,-5,-4,57,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,57,-33,]),'LOR':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,79,86,91,95,113,114,115,116,117,118,119,120,121,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,93,93,-47,93,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'WHILE':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,47,53,54,60,62,63,64,65,66,68,69,70,72,79,84,85,91,92,105,106,107,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,58,-51,-31,-10,-9,-62,-3,-8,-13,-12,-11,-7,58,58,-6,58,-47,-34,-5,-4,58,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,58,-33,]),'PRINT':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,47,53,54,60,62,63,64,65,66,68,69,70,72,79,84,85,91,92,105,106,107,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,59,-51,-31,-10,-9,-62,-3,-8,-13,-12,-11,-7,59,59,-6,59,-47,-34,-5,-4,59,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,59,-33,]),'MINUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,41,43,44,45,46,53,54,55,58,67,75,78,80,81,82,83,93,94,96,97,98,99,100,101,102,103,104,116,117,118,119,120,121,],[-60,11,-56,11,-50,-58,11,11,-49,-55,31,-57,-29,-28,31,11,11,11,11,-61,11,-30,31,-38,-36,-35,-37,-51,-31,11,11,11,31,11,11,31,11,11,11,11,31,11,11,11,11,11,11,31,31,31,31,31,31,31,31,]),'STRING':([7,11,15,16,29,30,31,32,34,55,58,67,74,78,80,82,83,93,94,97,98,99,100,101,102,109,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BEGIN':([4,10,13,14,17,18,20,25,27,33,35,39,43,44,45,46,47,48,50,53,54,72,73,79,91,107,108,113,114,115,116,117,118,119,120,121,128,131,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,47,-30,-38,-36,-35,-37,63,-15,72,-51,-31,63,-14,63,-47,63,-16,-46,-45,-48,-40,-43,-39,-44,-42,-41,63,-17,]),'LAND':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,79,86,91,95,113,114,115,116,117,118,119,120,121,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,94,94,-47,94,94,-45,-48,-40,-43,-39,-44,-42,-41,]),'RPAREN':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,28,29,33,38,39,40,41,42,43,44,45,46,51,52,53,54,75,90,91,95,96,103,111,113,114,115,116,117,118,119,120,121,],[-60,-62,-59,-56,-50,-58,-49,-55,-57,-21,35,-22,-29,-28,39,-62,-61,53,-30,54,-53,-54,-38,-36,-35,-37,-20,-23,-51,-31,-52,112,-47,115,39,122,-24,-46,-45,-48,-40,-43,-39,-44,-42,-41,]),'SEMI':([4,9,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,87,104,112,122,129,],[-60,-59,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,108,123,126,127,131,]),'NE':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,100,100,]),'LT':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,99,99,]),'PLUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,41,43,44,45,46,53,54,55,58,67,75,78,80,81,82,83,93,94,96,97,98,99,100,101,102,103,104,116,117,118,119,120,121,],[-60,15,-56,15,-50,-58,15,15,-49,-55,32,-57,-29,-28,32,15,15,15,15,-61,15,-30,32,-38,-36,-35,-37,-51,-31,15,15,15,32,15,15,32,15,15,15,15,32,15,15,15,15,15,15,32,32,32,32,32,32,32,32,]),'COLON':([4,24,33,49,],[-60,37,-61,71,]),'ASSIGN':([4,33,61,],[-60,-61,83,]),'$end':([1,3,6,76,110,],[-2,0,-1,-19,-18,]),'GT':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,97,97,]),'END':([56,60,62,63,64,65,66,68,69,70,84,85,88,92,105,106,123,124,126,127,130,],[76,-10,-9,-62,-3,-8,-13,-12,-11,-7,-6,106,110,-34,-5,-4,-25,-32,-27,-26,-33,]),'DIVIDE':([4,10,13,14,17,18,19,20,25,27,28,33,39,41,43,44,45,46,53,54,75,81,96,103,104,116,117,118,119,120,121,],[-60,-56,-50,-58,-49,-55,30,-57,-29,-28,30,-61,-30,30,-38,30,30,-37,-51,-31,30,30,30,30,30,30,30,30,30,30,30,]),'TIMES':([4,10,13,14,17,18,19,20,25,27,28,33,39,41,43,44,45,46,53,54,75,81,96,103,104,116,117,118,119,120,121,],[-60,-56,-50,-58,-49,-55,34,-57,-29,-28,34,-61,-30,34,-38,34,34,-37,-51,-31,34,34,34,34,34,34,34,34,34,34,34,]),'GE':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,101,101,]),'LE':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,102,102,]),'FUNC':([0,1,3,6,76,110,],[2,-2,2,-1,-19,-18,]),'INTEGER':([7,11,15,16,29,30,31,32,34,55,58,67,74,78,80,82,83,93,94,97,98,99,100,101,102,109,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ELSE':([60,62,64,65,66,68,69,70,92,106,123,124,126,127,130,],[-10,-9,-3,-8,-13,-12,-11,-7,-34,-4,-25,128,-27,-26,-33,]),'EQ':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,53,54,81,96,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,98,98,]),'ID':([2,4,7,8,10,11,13,14,15,16,17,18,20,25,26,27,29,30,31,32,33,34,35,36,39,43,44,45,46,47,48,50,53,54,55,58,60,62,63,64,65,66,67,68,69,70,72,73,77,78,79,80,82,83,84,85,91,92,93,94,97,98,99,100,101,102,105,106,107,108,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,131,],[4,-60,4,4,-56,4,-50,-58,4,4,-49,-55,-57,-29,4,-28,4,4,4,4,-61,4,4,4,-30,-38,-36,-35,-37,4,-15,4,-51,-31,4,4,-10,-9,-62,-3,-8,-13,4,-12,-11,-7,4,-14,4,4,4,4,4,4,-6,4,-47,-34,4,4,4,4,4,4,4,4,-5,-4,4,-16,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,4,-33,-17,]),'IF':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,47,53,54,60,62,63,64,65,66,68,69,70,72,79,84,85,91,92,105,106,107,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,67,-51,-31,-10,-9,-62,-3,-8,-13,-12,-11,-7,67,67,-6,67,-47,-34,-5,-4,67,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,67,-33,]),'LBRACKET':([4,9,52,87,],[7,-59,74,109,]),'FLOAT':([7,11,15,16,29,30,31,32,34,55,58,67,74,78,80,82,83,93,94,97,98,99,100,101,102,109,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([4,10,13,14,17,18,20,25,27,33,39,43,44,45,46,47,53,54,60,62,63,64,65,66,68,69,70,72,79,84,85,91,92,105,106,107,113,114,115,116,117,118,119,120,121,123,124,126,127,128,130,],[-60,-56,-50,-58,-49,-55,-57,-29,-28,-61,-30,-38,-36,-35,-37,68,-51,-31,-10,-9,-62,-3,-8,-13,-12,-11,-7,68,68,-6,68,-47,-34,-5,-4,68,-46,-45,-48,-40,-43,-39,-44,-42,-41,-25,-32,-27,-26,68,-33,]),'TYPENAME':([7,11,15,16,29,30,31,32,34,37,55,58,67,71,78,80,82,83,93,94,97,98,99,100,101,102,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'BOOLEAN':([7,11,15,16,29,30,31,32,34,55,58,67,74,78,80,82,83,93,94,97,98,99,100,101,102,109,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RBRACKET':([4,10,13,14,17,18,19,20,25,27,33,39,43,44,45,46,53,54,89,125,],[-60,-56,-50,-58,-49,-55,33,-57,-29,-28,-61,-30,-38,-36,-35,-37,-51,-31,111,129,]),'COMMA':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,29,33,39,40,41,42,43,44,45,46,51,52,53,54,75,111,],[-60,-62,-59,-56,-50,-58,-49,-55,-57,-21,36,-22,-29,-28,-62,-61,-30,55,-53,-54,-38,-36,-35,-37,-20,-23,-51,-31,-52,-24,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([47,72,79,107,128,],[56,88,92,124,130,]),'cond':([58,67,78,80,93,94,],[79,86,91,95,113,114,]),'id':([2,7,8,11,15,16,26,29,30,31,32,34,35,36,47,50,55,58,67,72,77,78,79,80,82,83,85,93,94,97,98,99,100,101,102,107,128,],[5,17,24,17,17,17,38,17,17,17,17,17,49,24,61,49,17,17,17,61,90,17,61,17,17,17,61,17,17,17,17,17,17,17,17,61,61,]),'locals':([35,],[50,]),'if':([47,72,79,85,107,128,],[62,62,62,62,62,62,]),'parameters':([8,],[22,]),'literal':([7,11,15,16,29,30,31,32,34,55,58,67,74,78,80,82,83,93,94,97,98,99,100,101,102,109,],[13,13,13,13,13,13,13,13,13,13,13,13,89,13,13,13,13,13,13,13,13,13,13,13,13,125,]),'program':([0,],[3,]),'statement':([47,72,79,85,107,128,],[64,64,64,105,64,64,]),'print':([47,72,79,85,107,128,],[65,65,65,65,65,65,]),'local':([35,50,],[48,73,]),'empty':([8,29,63,],[23,42,84,]),'function':([0,3,],[1,6,]),'if_else':([47,72,79,85,107,128,],[60,60,60,60,60,60,]),'read':([47,72,79,85,107,128,],[66,66,66,66,66,66,]),'exprlist':([29,],[40,]),'parm_declaration':([8,36,],[21,51,]),'st':([63,],[85,]),'typename':([7,11,15,16,29,30,31,32,34,37,55,58,67,71,78,80,82,83,93,94,97,98,99,100,101,102,],[12,12,12,12,12,12,12,12,12,52,12,12,12,87,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([47,72,79,85,107,128,],[69,69,69,69,69,69,]),'expression':([7,11,15,16,29,30,31,32,34,55,58,67,78,80,82,83,93,94,97,98,99,100,101,102,],[19,25,27,28,41,43,44,45,46,75,81,81,81,96,103,104,81,81,116,117,118,119,120,121,]),'assign':([47,72,79,85,107,128,],[70,70,70,70,70,70,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',29),
  ('statements -> BEGIN st END','statements',3,'p_statements','mpasparse.py',30),
  ('st -> st statement','st',2,'p_st','mpasparse.py',39),
  ('st -> empty','st',1,'p_st','mpasparse.py',40),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',47),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',48),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',49),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',50),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',51),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',52),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',53),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',65),
  ('locals -> local','locals',1,'p_locals_1','mpasparse.py',72),
  ('local -> id COLON typename SEMI','local',4,'p_local','mpasparse.py',78),
  ('local -> id COLON typename LBRACKET literal RBRACKET SEMI','local',7,'p_local_2','mpasparse.py',84),
  ('function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',90),
  ('function -> FUNC id LPAREN parameters RPAREN BEGIN statements END','function',8,'p_fundecl_1','mpasparse.py',96),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',102),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',109),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',110),
  ('parm_declaration -> id COLON typename','parm_declaration',3,'p_parm_declaration','mpasparse.py',116),
  ('parm_declaration -> id COLON typename LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',122),
  ('assign -> id ASSIGN expression SEMI','assign',4,'p_assign','mpasparse.py',128),
  ('print -> PRINT LPAREN expression RPAREN SEMI','print',5,'p_print','mpasparse.py',134),
  ('read -> READ LPAREN id RPAREN SEMI','read',5,'p_read','mpasparse.py',140),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',146),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',147),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',154),
  ('expression -> id LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','mpasparse.py',160),
  ('if -> IF cond THEN statements','if',4,'p_if','mpasparse.py',169),
  ('if_else -> IF cond THEN statements ELSE statements','if_else',6,'p_if_else','mpasparse.py',175),
  ('while -> WHILE cond statements','while',3,'p_while','mpasparse.py',181),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',187),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',188),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',189),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',190),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',204),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',205),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',206),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',207),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',208),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',209),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',228),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',229),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',230),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond_2','mpasparse.py',249),
  ('expression -> id','expression',1,'p_expression_1','mpasparse.py',255),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',256),
  ('expression -> typename LPAREN id RPAREN','expression',4,'p_expression_2','mpasparse.py',262),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',268),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',275),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','mpasparse.py',276),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',282),
  ('literal -> FLOAT','literal',1,'p_literal','mpasparse.py',283),
  ('literal -> STRING','literal',1,'p_literal','mpasparse.py',284),
  ('literal -> BOOLEAN','literal',1,'p_literal','mpasparse.py',285),
  ('typename -> TYPENAME','typename',1,'p_typename','mpasparse.py',291),
  ('id -> ID','id',1,'p_id','mpasparse.py',297),
  ('id -> ID LBRACKET expression RBRACKET','id',4,'p_id_2','mpasparse.py',303),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',309),
]
