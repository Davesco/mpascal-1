
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xcc\xa6Q\x8e\x9cS\xea\xa4%\x13V\xcf\xc7\x8a\x97\x16'
    
_lr_action_items = {'THEN':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,91,95,112,113,114,115,116,117,118,119,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-49,-50,109,-48,-47,-46,-41,-44,-40,-45,-43,-42,]),'LNOT':([64,73,82,97,98,],[82,82,82,82,82,]),'LPAREN':([4,5,7,9,11,12,15,16,17,29,30,31,32,33,34,55,63,64,65,73,82,84,87,88,97,98,99,100,101,102,103,104,],[-61,8,16,-60,16,26,16,16,29,16,16,16,16,-62,16,16,81,16,87,16,16,29,16,16,16,16,16,16,16,16,16,16,]),'READ':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,57,66,68,69,70,71,72,74,75,76,83,84,85,89,90,95,96,107,108,109,112,113,114,115,116,117,118,119,121,122,124,125,126,127,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,63,-10,-9,-63,-3,-8,-13,-12,-11,-7,63,-49,-50,-6,63,-48,-35,-5,-4,63,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-27,-26,63,-34,]),'LOR':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,83,84,85,91,95,112,113,114,115,116,117,118,119,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,97,-49,-50,97,-48,-47,-46,-41,-44,-40,-45,-43,-42,]),'WHILE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,57,66,68,69,70,71,72,74,75,76,83,84,85,89,90,95,96,107,108,109,112,113,114,115,116,117,118,119,121,122,124,125,126,127,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,64,-10,-9,-63,-3,-8,-13,-12,-11,-7,64,-49,-50,-6,64,-48,-35,-5,-4,64,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-27,-26,64,-34,]),'PRINT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,57,66,68,69,70,71,72,74,75,76,83,84,85,89,90,95,96,107,108,109,112,113,114,115,116,117,118,119,121,122,124,125,126,127,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,65,-10,-9,-63,-3,-8,-13,-12,-11,-7,65,-49,-50,-6,65,-48,-35,-5,-4,65,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-27,-26,65,-34,]),'MINUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,40,42,43,44,45,46,53,54,55,60,64,73,82,84,85,86,87,88,97,98,99,100,101,102,103,104,105,106,114,115,116,117,118,119,],[-61,11,-57,11,-52,-59,11,11,-51,-56,31,-58,-29,-28,31,11,11,11,11,-62,11,-30,-32,31,-39,-37,-36,-38,-53,-31,11,31,11,11,11,-51,-52,31,11,11,11,11,11,11,11,11,11,11,31,31,31,31,31,31,31,31,]),'STRING':([7,11,15,16,29,30,31,32,34,55,59,64,73,79,82,87,88,97,98,99,100,101,102,103,104,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BEGIN':([4,10,13,14,17,18,20,25,27,33,35,39,40,43,44,45,46,47,48,50,53,54,57,58,78,83,84,85,95,109,112,113,114,115,116,117,118,119,123,126,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-63,-30,-32,-39,-37,-36,-38,-16,-15,57,-53,-31,69,-14,-17,69,-49,-50,-48,69,-47,-46,-41,-44,-40,-45,-43,-42,-18,69,]),'LAND':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,83,84,85,91,95,112,113,114,115,116,117,118,119,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,98,-49,-50,98,-48,98,-46,-41,-44,-40,-45,-43,-42,]),'RPAREN':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,28,29,33,38,39,40,41,42,43,44,45,46,51,52,53,54,60,92,94,105,],[-61,-63,-60,-57,-52,-59,-51,-56,-58,-21,35,-22,-29,-28,39,40,-62,53,-30,-32,54,-55,-39,-37,-36,-38,-20,-23,-53,-31,-54,-24,111,120,]),'SEMI':([4,9,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,61,106,110,111,120,],[-61,-60,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,78,121,123,124,125,]),'NE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,102,]),'LT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,101,]),'PLUS':([4,7,10,11,13,14,15,16,17,18,19,20,25,27,28,29,30,31,32,33,34,39,40,42,43,44,45,46,53,54,55,60,64,73,82,84,85,86,87,88,97,98,99,100,101,102,103,104,105,106,114,115,116,117,118,119,],[-61,15,-57,15,-52,-59,15,15,-51,-56,32,-58,-29,-28,32,15,15,15,15,-62,15,-30,-32,32,-39,-37,-36,-38,-53,-31,15,32,15,15,15,-51,-52,32,15,15,15,15,15,15,15,15,15,15,32,32,32,32,32,32,32,32,]),'COLON':([4,24,33,49,],[-61,37,-62,56,]),'ASSIGN':([4,33,67,],[-61,-62,88,]),'$end':([1,3,6,80,],[-2,0,-1,-19,]),'GT':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,99,]),'END':([62,66,68,69,70,71,72,74,75,76,89,90,96,107,108,121,122,124,125,127,],[80,-10,-9,-63,-3,-8,-13,-12,-11,-7,-6,108,-35,-5,-4,-25,-33,-27,-26,-34,]),'DIVIDE':([4,10,13,14,17,18,19,20,25,27,28,33,39,40,42,43,44,45,46,53,54,60,84,85,86,105,106,114,115,116,117,118,119,],[-61,-57,-52,-59,-51,-56,30,-58,-29,-28,30,-62,-30,-32,30,-39,30,30,-38,-53,-31,30,-51,-52,30,30,30,30,30,30,30,30,30,]),'TIMES':([4,10,13,14,17,18,19,20,25,27,28,33,39,40,42,43,44,45,46,53,54,60,84,85,86,105,106,114,115,116,117,118,119,],[-61,-57,-52,-59,-51,-56,34,-58,-29,-28,34,-62,-30,-32,34,-39,34,34,-38,-53,-31,34,-51,-52,34,34,34,34,34,34,34,34,34,]),'GE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,103,]),'LE':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,104,]),'FUNC':([0,1,3,6,80,],[2,-2,2,-1,-19,]),'INTEGER':([7,11,15,16,29,30,31,32,34,55,59,64,73,79,82,87,88,97,98,99,100,101,102,103,104,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ELSE':([66,68,70,71,72,74,75,76,96,108,121,122,124,125,127,],[-10,-9,-3,-8,-13,-12,-11,-7,-35,-4,-25,126,-27,-26,-34,]),'EQ':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,84,85,86,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,-51,-52,100,]),'ID':([2,4,7,8,10,11,13,14,15,16,17,18,20,25,26,27,29,30,31,32,33,34,35,36,39,40,43,44,45,46,47,48,50,53,54,55,57,58,64,66,68,69,70,71,72,73,74,75,76,78,81,82,83,84,85,87,88,89,90,95,96,97,98,99,100,101,102,103,104,107,108,109,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,],[4,-61,4,4,-57,4,-52,-59,4,4,-51,-56,-58,-29,4,-28,4,4,4,4,-62,4,4,4,-30,-32,-39,-37,-36,-38,-16,-15,4,-53,-31,4,4,-14,4,-10,-9,-63,-3,-8,-13,4,-12,-11,-7,-17,4,4,4,-49,-50,4,4,-6,4,-48,-35,4,4,4,4,4,4,4,4,-5,-4,4,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-18,-27,-26,4,-34,]),'IF':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,57,66,68,69,70,71,72,74,75,76,83,84,85,89,90,95,96,107,108,109,112,113,114,115,116,117,118,119,121,122,124,125,126,127,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,73,-10,-9,-63,-3,-8,-13,-12,-11,-7,73,-49,-50,-6,73,-48,-35,-5,-4,73,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-27,-26,73,-34,]),'LBRACKET':([4,9,52,61,],[7,-60,59,79,]),'FLOAT':([7,11,15,16,29,30,31,32,34,55,59,64,73,79,82,87,88,97,98,99,100,101,102,103,104,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([4,10,13,14,17,18,20,25,27,33,39,40,43,44,45,46,53,54,57,66,68,69,70,71,72,74,75,76,83,84,85,89,90,95,96,107,108,109,112,113,114,115,116,117,118,119,121,122,124,125,126,127,],[-61,-57,-52,-59,-51,-56,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,74,-10,-9,-63,-3,-8,-13,-12,-11,-7,74,-49,-50,-6,74,-48,-35,-5,-4,74,-47,-46,-41,-44,-40,-45,-43,-42,-25,-33,-27,-26,74,-34,]),'TYPENAME':([7,11,15,16,29,30,31,32,34,37,55,56,64,73,82,87,88,97,98,99,100,101,102,103,104,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'BOOLEAN':([7,11,15,16,29,30,31,32,34,55,59,64,73,79,82,87,88,97,98,99,100,101,102,103,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RBRACKET':([4,10,13,14,17,18,19,20,25,27,33,39,40,43,44,45,46,53,54,77,93,],[-61,-57,-52,-59,-51,-56,33,-58,-29,-28,-62,-30,-32,-39,-37,-36,-38,-53,-31,92,110,]),'COMMA':([4,8,9,10,13,14,17,18,20,21,22,23,25,27,33,39,40,41,42,43,44,45,46,51,52,53,54,60,92,],[-61,-63,-60,-57,-52,-59,-51,-56,-58,-21,36,-22,-29,-28,-62,-30,-32,55,-55,-39,-37,-36,-38,-20,-23,-53,-31,-54,-24,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([57,83,109,126,],[62,96,122,127,]),'cond':([64,73,82,97,98,],[83,91,95,112,113,]),'id':([2,7,8,11,15,16,26,29,30,31,32,34,35,36,50,55,57,64,73,81,82,83,87,88,90,97,98,99,100,101,102,103,104,109,126,],[5,17,24,17,17,17,38,17,17,17,17,17,49,24,49,17,67,84,84,94,84,67,17,17,67,84,84,17,17,17,17,17,17,67,67,]),'locals':([35,],[50,]),'if':([57,83,90,109,126,],[68,68,68,68,68,]),'parameters':([8,],[22,]),'literal':([7,11,15,16,29,30,31,32,34,55,59,64,73,79,82,87,88,97,98,99,100,101,102,103,104,],[13,13,13,13,13,13,13,13,13,13,77,85,85,93,85,13,13,85,85,13,13,13,13,13,13,]),'program':([0,],[3,]),'statement':([57,83,90,109,126,],[70,70,107,70,70,]),'print':([57,83,90,109,126,],[71,71,71,71,71,]),'local':([35,50,],[48,58,]),'empty':([8,35,69,],[23,47,89,]),'function':([0,3,],[1,6,]),'if_else':([57,83,90,109,126,],[66,66,66,66,66,]),'read':([57,83,90,109,126,],[72,72,72,72,72,]),'exprlist':([29,],[41,]),'parm_declaration':([8,36,],[21,51,]),'st':([69,],[90,]),'typename':([7,11,15,16,29,30,31,32,34,37,55,56,64,73,82,87,88,97,98,99,100,101,102,103,104,],[12,12,12,12,12,12,12,12,12,52,12,61,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([57,83,90,109,126,],[75,75,75,75,75,]),'expression':([7,11,15,16,29,30,31,32,34,55,64,73,82,87,88,97,98,99,100,101,102,103,104,],[19,25,27,28,42,43,44,45,46,60,86,86,86,105,106,86,86,114,115,116,117,118,119,]),'assign':([57,83,90,109,126,],[76,76,76,76,76,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',29),
  ('statements -> BEGIN st END','statements',3,'p_statements','mpasparse.py',30),
  ('st -> st statement','st',2,'p_st','mpasparse.py',39),
  ('st -> empty','st',1,'p_st','mpasparse.py',40),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',47),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',48),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',49),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',50),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',51),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',52),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',53),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',65),
  ('locals -> local','locals',1,'p_locals_1','mpasparse.py',72),
  ('locals -> empty','locals',1,'p_locals_1','mpasparse.py',73),
  ('local -> id COLON typename SEMI','local',4,'p_local','mpasparse.py',79),
  ('local -> id COLON typename LBRACKET literal RBRACKET SEMI','local',7,'p_local_2','mpasparse.py',85),
  ('function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',91),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',97),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',104),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',105),
  ('parm_declaration -> id COLON typename','parm_declaration',3,'p_parm_declaration','mpasparse.py',111),
  ('parm_declaration -> id COLON typename LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',117),
  ('assign -> id ASSIGN expression SEMI','assign',4,'p_assign','mpasparse.py',123),
  ('print -> PRINT LPAREN expression RPAREN SEMI','print',5,'p_print','mpasparse.py',129),
  ('read -> READ LPAREN id RPAREN SEMI','read',5,'p_read','mpasparse.py',135),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',141),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',142),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',149),
  ('expression -> id LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','mpasparse.py',155),
  ('expression -> id LPAREN RPAREN','expression',3,'p_expression_funcall','mpasparse.py',156),
  ('if -> IF cond THEN statements','if',4,'p_if','mpasparse.py',165),
  ('if_else -> IF cond THEN statements ELSE statements','if_else',6,'p_if_else','mpasparse.py',171),
  ('while -> WHILE cond statements','while',3,'p_while','mpasparse.py',177),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',183),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',184),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',185),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',186),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',200),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',201),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',202),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',203),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',204),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',205),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',224),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',225),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',226),
  ('cond -> id','cond',1,'p_cond_1','mpasparse.py',238),
  ('cond -> literal','cond',1,'p_cond_1','mpasparse.py',239),
  ('expression -> id','expression',1,'p_expression_1','mpasparse.py',245),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',246),
  ('expression -> typename LPAREN id RPAREN','expression',4,'p_expression_2','mpasparse.py',252),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',258),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',265),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',271),
  ('literal -> FLOAT','literal',1,'p_literal','mpasparse.py',272),
  ('literal -> STRING','literal',1,'p_literal','mpasparse.py',273),
  ('literal -> BOOLEAN','literal',1,'p_literal','mpasparse.py',274),
  ('typename -> TYPENAME','typename',1,'p_typename','mpasparse.py',280),
  ('id -> ID','id',1,'p_id','mpasparse.py',286),
  ('id -> ID LBRACKET expression RBRACKET','id',4,'p_id_2','mpasparse.py',292),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',298),
]
