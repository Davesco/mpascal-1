Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program function
Rule 2     program -> function
Rule 3     statements -> statement
Rule 4     statements -> BEGIN st END
Rule 5     st -> st statement
Rule 6     st -> empty
Rule 7     statement -> assign
Rule 8     statement -> print
Rule 9     statement -> if
Rule 10    statement -> if_else
Rule 11    statement -> while
Rule 12    statement -> BREAK
Rule 13    statement -> read
Rule 14    locals -> locals local
Rule 15    locals -> local
Rule 16    locals -> empty
Rule 17    local -> id COLON typename SEMI
Rule 18    local -> id COLON typename LBRACKET literal RBRACKET SEMI
Rule 19    function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END
Rule 20    parameters -> parameters COMMA parm_declaration
Rule 21    parameters -> parm_declaration
Rule 22    parameters -> empty
Rule 23    parm_declaration -> id COLON typename
Rule 24    parm_declaration -> id COLON typename LBRACKET literal RBRACKET
Rule 25    assign -> id ASSIGN expression SEMI
Rule 26    print -> PRINT LPAREN expression RPAREN SEMI
Rule 27    read -> READ LPAREN id RPAREN SEMI
Rule 28    expression -> PLUS expression
Rule 29    expression -> MINUS expression
Rule 30    expression -> LPAREN expression RPAREN
Rule 31    expression -> id LPAREN exprlist RPAREN
Rule 32    expression -> id LPAREN RPAREN
Rule 33    if -> IF cond THEN statements
Rule 34    if_else -> IF cond THEN statements ELSE statements
Rule 35    while -> WHILE cond statements
Rule 36    expression -> expression PLUS expression
Rule 37    expression -> expression MINUS expression
Rule 38    expression -> expression TIMES expression
Rule 39    expression -> expression DIVIDE expression
Rule 40    cond -> expression LT expression
Rule 41    cond -> expression GT expression
Rule 42    cond -> expression LE expression
Rule 43    cond -> expression GE expression
Rule 44    cond -> expression EQ expression
Rule 45    cond -> expression NE expression
Rule 46    cond -> cond LAND cond
Rule 47    cond -> cond LOR cond
Rule 48    cond -> LNOT cond
Rule 49    cond -> id
Rule 50    cond -> literal
Rule 51    expression -> id
Rule 52    expression -> literal
Rule 53    expression -> typename LPAREN id RPAREN
Rule 54    exprlist -> exprlist COMMA expression
Rule 55    exprlist -> expression
Rule 56    literal -> INTEGER
Rule 57    literal -> FLOAT
Rule 58    literal -> STRING
Rule 59    literal -> BOOLEAN
Rule 60    typename -> TYPENAME
Rule 61    id -> ID
Rule 62    id -> ID LBRACKET expression RBRACKET
Rule 63    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 25
BEGIN                : 4 19
BOOLEAN              : 59
BREAK                : 12
COLON                : 17 18 23 24
COMMA                : 20 54
DIVIDE               : 39
ELSE                 : 34
END                  : 4 19
EQ                   : 44
FLOAT                : 57
FUNC                 : 19
GE                   : 43
GT                   : 41
ID                   : 61 62
IF                   : 33 34
INTEGER              : 56
LAND                 : 46
LBRACKET             : 18 24 62
LE                   : 42
LNOT                 : 48
LOR                  : 47
LPAREN               : 19 26 27 30 31 32 53
LT                   : 40
MINUS                : 29 37
NE                   : 45
PLUS                 : 28 36
PRINT                : 26
RBRACKET             : 18 24 62
READ                 : 27
RPAREN               : 19 26 27 30 31 32 53
SEMI                 : 17 18 25 26 27
STRING               : 58
THEN                 : 33 34
TIMES                : 38
TYPENAME             : 60
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

assign               : 7
cond                 : 33 34 35 46 46 47 47 48
empty                : 6 16 22
expression           : 25 26 28 29 30 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 54 55 62
exprlist             : 31 54
function             : 1 2
id                   : 17 18 19 23 24 25 27 31 32 49 51 53
if                   : 9
if_else              : 10
literal              : 18 24 50 52
local                : 14 15
locals               : 14 19
parameters           : 19 20
parm_declaration     : 20 21
print                : 8
program              : 1 0
read                 : 13
st                   : 4 5
statement            : 3 5
statements           : 19 33 34 34 35
typename             : 17 18 23 24 53
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program function
    (2) program -> . function
    (19) function -> . FUNC id LPAREN parameters RPAREN locals BEGIN statements END

    FUNC            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 3

state 1

    (2) program -> function .

    FUNC            reduce using rule 2 (program -> function .)
    $end            reduce using rule 2 (program -> function .)


state 2

    (19) function -> FUNC . id LPAREN parameters RPAREN locals BEGIN statements END
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 5

state 3

    (0) S' -> program .
    (1) program -> program . function
    (19) function -> . FUNC id LPAREN parameters RPAREN locals BEGIN statements END

    FUNC            shift and go to state 2

    function                       shift and go to state 6

state 4

    (61) id -> ID .
    (62) id -> ID . LBRACKET expression RBRACKET

    COLON           reduce using rule 61 (id -> ID .)
    LPAREN          reduce using rule 61 (id -> ID .)
    PLUS            reduce using rule 61 (id -> ID .)
    MINUS           reduce using rule 61 (id -> ID .)
    TIMES           reduce using rule 61 (id -> ID .)
    DIVIDE          reduce using rule 61 (id -> ID .)
    LAND            reduce using rule 61 (id -> ID .)
    LOR             reduce using rule 61 (id -> ID .)
    BEGIN           reduce using rule 61 (id -> ID .)
    BREAK           reduce using rule 61 (id -> ID .)
    PRINT           reduce using rule 61 (id -> ID .)
    IF              reduce using rule 61 (id -> ID .)
    WHILE           reduce using rule 61 (id -> ID .)
    READ            reduce using rule 61 (id -> ID .)
    ID              reduce using rule 61 (id -> ID .)
    THEN            reduce using rule 61 (id -> ID .)
    RPAREN          reduce using rule 61 (id -> ID .)
    RBRACKET        reduce using rule 61 (id -> ID .)
    COMMA           reduce using rule 61 (id -> ID .)
    LT              reduce using rule 61 (id -> ID .)
    GT              reduce using rule 61 (id -> ID .)
    LE              reduce using rule 61 (id -> ID .)
    GE              reduce using rule 61 (id -> ID .)
    EQ              reduce using rule 61 (id -> ID .)
    NE              reduce using rule 61 (id -> ID .)
    SEMI            reduce using rule 61 (id -> ID .)
    ASSIGN          reduce using rule 61 (id -> ID .)
    LBRACKET        shift and go to state 7


state 5

    (19) function -> FUNC id . LPAREN parameters RPAREN locals BEGIN statements END

    LPAREN          shift and go to state 8


state 6

    (1) program -> program function .

    FUNC            reduce using rule 1 (program -> program function .)
    $end            reduce using rule 1 (program -> program function .)


state 7

    (62) id -> ID LBRACKET . expression RBRACKET
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 19
    id                             shift and go to state 17

state 8

    (19) function -> FUNC id LPAREN . parameters RPAREN locals BEGIN statements END
    (20) parameters -> . parameters COMMA parm_declaration
    (21) parameters -> . parm_declaration
    (22) parameters -> . empty
    (23) parm_declaration -> . id COLON typename
    (24) parm_declaration -> . id COLON typename LBRACKET literal RBRACKET
    (63) empty -> .
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    RPAREN          reduce using rule 63 (empty -> .)
    COMMA           reduce using rule 63 (empty -> .)
    ID              shift and go to state 4

    parm_declaration               shift and go to state 21
    parameters                     shift and go to state 22
    id                             shift and go to state 24
    empty                          shift and go to state 23

state 9

    (60) typename -> TYPENAME .

    LPAREN          reduce using rule 60 (typename -> TYPENAME .)
    SEMI            reduce using rule 60 (typename -> TYPENAME .)
    LBRACKET        reduce using rule 60 (typename -> TYPENAME .)
    RPAREN          reduce using rule 60 (typename -> TYPENAME .)
    COMMA           reduce using rule 60 (typename -> TYPENAME .)


state 10

    (57) literal -> FLOAT .

    PLUS            reduce using rule 57 (literal -> FLOAT .)
    MINUS           reduce using rule 57 (literal -> FLOAT .)
    TIMES           reduce using rule 57 (literal -> FLOAT .)
    DIVIDE          reduce using rule 57 (literal -> FLOAT .)
    RBRACKET        reduce using rule 57 (literal -> FLOAT .)
    RPAREN          reduce using rule 57 (literal -> FLOAT .)
    COMMA           reduce using rule 57 (literal -> FLOAT .)
    LT              reduce using rule 57 (literal -> FLOAT .)
    GT              reduce using rule 57 (literal -> FLOAT .)
    LE              reduce using rule 57 (literal -> FLOAT .)
    GE              reduce using rule 57 (literal -> FLOAT .)
    EQ              reduce using rule 57 (literal -> FLOAT .)
    NE              reduce using rule 57 (literal -> FLOAT .)
    SEMI            reduce using rule 57 (literal -> FLOAT .)
    LAND            reduce using rule 57 (literal -> FLOAT .)
    LOR             reduce using rule 57 (literal -> FLOAT .)
    BEGIN           reduce using rule 57 (literal -> FLOAT .)
    BREAK           reduce using rule 57 (literal -> FLOAT .)
    PRINT           reduce using rule 57 (literal -> FLOAT .)
    IF              reduce using rule 57 (literal -> FLOAT .)
    WHILE           reduce using rule 57 (literal -> FLOAT .)
    READ            reduce using rule 57 (literal -> FLOAT .)
    ID              reduce using rule 57 (literal -> FLOAT .)
    THEN            reduce using rule 57 (literal -> FLOAT .)


state 11

    (29) expression -> MINUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 25
    id                             shift and go to state 17

state 12

    (53) expression -> typename . LPAREN id RPAREN

    LPAREN          shift and go to state 26


state 13

    (52) expression -> literal .

    PLUS            reduce using rule 52 (expression -> literal .)
    MINUS           reduce using rule 52 (expression -> literal .)
    TIMES           reduce using rule 52 (expression -> literal .)
    DIVIDE          reduce using rule 52 (expression -> literal .)
    LAND            reduce using rule 52 (expression -> literal .)
    LOR             reduce using rule 52 (expression -> literal .)
    BEGIN           reduce using rule 52 (expression -> literal .)
    BREAK           reduce using rule 52 (expression -> literal .)
    PRINT           reduce using rule 52 (expression -> literal .)
    IF              reduce using rule 52 (expression -> literal .)
    WHILE           reduce using rule 52 (expression -> literal .)
    READ            reduce using rule 52 (expression -> literal .)
    ID              reduce using rule 52 (expression -> literal .)
    THEN            reduce using rule 52 (expression -> literal .)
    RPAREN          reduce using rule 52 (expression -> literal .)
    RBRACKET        reduce using rule 52 (expression -> literal .)
    COMMA           reduce using rule 52 (expression -> literal .)
    LT              reduce using rule 52 (expression -> literal .)
    GT              reduce using rule 52 (expression -> literal .)
    LE              reduce using rule 52 (expression -> literal .)
    GE              reduce using rule 52 (expression -> literal .)
    EQ              reduce using rule 52 (expression -> literal .)
    NE              reduce using rule 52 (expression -> literal .)
    SEMI            reduce using rule 52 (expression -> literal .)


state 14

    (59) literal -> BOOLEAN .

    PLUS            reduce using rule 59 (literal -> BOOLEAN .)
    MINUS           reduce using rule 59 (literal -> BOOLEAN .)
    TIMES           reduce using rule 59 (literal -> BOOLEAN .)
    DIVIDE          reduce using rule 59 (literal -> BOOLEAN .)
    RBRACKET        reduce using rule 59 (literal -> BOOLEAN .)
    RPAREN          reduce using rule 59 (literal -> BOOLEAN .)
    COMMA           reduce using rule 59 (literal -> BOOLEAN .)
    LT              reduce using rule 59 (literal -> BOOLEAN .)
    GT              reduce using rule 59 (literal -> BOOLEAN .)
    LE              reduce using rule 59 (literal -> BOOLEAN .)
    GE              reduce using rule 59 (literal -> BOOLEAN .)
    EQ              reduce using rule 59 (literal -> BOOLEAN .)
    NE              reduce using rule 59 (literal -> BOOLEAN .)
    SEMI            reduce using rule 59 (literal -> BOOLEAN .)
    LAND            reduce using rule 59 (literal -> BOOLEAN .)
    LOR             reduce using rule 59 (literal -> BOOLEAN .)
    BEGIN           reduce using rule 59 (literal -> BOOLEAN .)
    BREAK           reduce using rule 59 (literal -> BOOLEAN .)
    PRINT           reduce using rule 59 (literal -> BOOLEAN .)
    IF              reduce using rule 59 (literal -> BOOLEAN .)
    WHILE           reduce using rule 59 (literal -> BOOLEAN .)
    READ            reduce using rule 59 (literal -> BOOLEAN .)
    ID              reduce using rule 59 (literal -> BOOLEAN .)
    THEN            reduce using rule 59 (literal -> BOOLEAN .)


state 15

    (28) expression -> PLUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 27
    id                             shift and go to state 17

state 16

    (30) expression -> LPAREN . expression RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 28
    id                             shift and go to state 17

state 17

    (31) expression -> id . LPAREN exprlist RPAREN
    (32) expression -> id . LPAREN RPAREN
    (51) expression -> id .

    LPAREN          shift and go to state 29
    PLUS            reduce using rule 51 (expression -> id .)
    MINUS           reduce using rule 51 (expression -> id .)
    TIMES           reduce using rule 51 (expression -> id .)
    DIVIDE          reduce using rule 51 (expression -> id .)
    LAND            reduce using rule 51 (expression -> id .)
    LOR             reduce using rule 51 (expression -> id .)
    BEGIN           reduce using rule 51 (expression -> id .)
    BREAK           reduce using rule 51 (expression -> id .)
    PRINT           reduce using rule 51 (expression -> id .)
    IF              reduce using rule 51 (expression -> id .)
    WHILE           reduce using rule 51 (expression -> id .)
    READ            reduce using rule 51 (expression -> id .)
    ID              reduce using rule 51 (expression -> id .)
    THEN            reduce using rule 51 (expression -> id .)
    RPAREN          reduce using rule 51 (expression -> id .)
    RBRACKET        reduce using rule 51 (expression -> id .)
    COMMA           reduce using rule 51 (expression -> id .)
    LT              reduce using rule 51 (expression -> id .)
    GT              reduce using rule 51 (expression -> id .)
    LE              reduce using rule 51 (expression -> id .)
    GE              reduce using rule 51 (expression -> id .)
    EQ              reduce using rule 51 (expression -> id .)
    NE              reduce using rule 51 (expression -> id .)
    SEMI            reduce using rule 51 (expression -> id .)


state 18

    (56) literal -> INTEGER .

    PLUS            reduce using rule 56 (literal -> INTEGER .)
    MINUS           reduce using rule 56 (literal -> INTEGER .)
    TIMES           reduce using rule 56 (literal -> INTEGER .)
    DIVIDE          reduce using rule 56 (literal -> INTEGER .)
    RBRACKET        reduce using rule 56 (literal -> INTEGER .)
    RPAREN          reduce using rule 56 (literal -> INTEGER .)
    COMMA           reduce using rule 56 (literal -> INTEGER .)
    LT              reduce using rule 56 (literal -> INTEGER .)
    GT              reduce using rule 56 (literal -> INTEGER .)
    LE              reduce using rule 56 (literal -> INTEGER .)
    GE              reduce using rule 56 (literal -> INTEGER .)
    EQ              reduce using rule 56 (literal -> INTEGER .)
    NE              reduce using rule 56 (literal -> INTEGER .)
    SEMI            reduce using rule 56 (literal -> INTEGER .)
    LAND            reduce using rule 56 (literal -> INTEGER .)
    LOR             reduce using rule 56 (literal -> INTEGER .)
    BEGIN           reduce using rule 56 (literal -> INTEGER .)
    BREAK           reduce using rule 56 (literal -> INTEGER .)
    PRINT           reduce using rule 56 (literal -> INTEGER .)
    IF              reduce using rule 56 (literal -> INTEGER .)
    WHILE           reduce using rule 56 (literal -> INTEGER .)
    READ            reduce using rule 56 (literal -> INTEGER .)
    ID              reduce using rule 56 (literal -> INTEGER .)
    THEN            reduce using rule 56 (literal -> INTEGER .)


state 19

    (62) id -> ID LBRACKET expression . RBRACKET
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 33
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 20

    (58) literal -> STRING .

    PLUS            reduce using rule 58 (literal -> STRING .)
    MINUS           reduce using rule 58 (literal -> STRING .)
    TIMES           reduce using rule 58 (literal -> STRING .)
    DIVIDE          reduce using rule 58 (literal -> STRING .)
    RBRACKET        reduce using rule 58 (literal -> STRING .)
    RPAREN          reduce using rule 58 (literal -> STRING .)
    COMMA           reduce using rule 58 (literal -> STRING .)
    LT              reduce using rule 58 (literal -> STRING .)
    GT              reduce using rule 58 (literal -> STRING .)
    LE              reduce using rule 58 (literal -> STRING .)
    GE              reduce using rule 58 (literal -> STRING .)
    EQ              reduce using rule 58 (literal -> STRING .)
    NE              reduce using rule 58 (literal -> STRING .)
    SEMI            reduce using rule 58 (literal -> STRING .)
    LAND            reduce using rule 58 (literal -> STRING .)
    LOR             reduce using rule 58 (literal -> STRING .)
    BEGIN           reduce using rule 58 (literal -> STRING .)
    BREAK           reduce using rule 58 (literal -> STRING .)
    PRINT           reduce using rule 58 (literal -> STRING .)
    IF              reduce using rule 58 (literal -> STRING .)
    WHILE           reduce using rule 58 (literal -> STRING .)
    READ            reduce using rule 58 (literal -> STRING .)
    ID              reduce using rule 58 (literal -> STRING .)
    THEN            reduce using rule 58 (literal -> STRING .)


state 21

    (21) parameters -> parm_declaration .

    RPAREN          reduce using rule 21 (parameters -> parm_declaration .)
    COMMA           reduce using rule 21 (parameters -> parm_declaration .)


state 22

    (19) function -> FUNC id LPAREN parameters . RPAREN locals BEGIN statements END
    (20) parameters -> parameters . COMMA parm_declaration

    RPAREN          shift and go to state 35
    COMMA           shift and go to state 36


state 23

    (22) parameters -> empty .

    RPAREN          reduce using rule 22 (parameters -> empty .)
    COMMA           reduce using rule 22 (parameters -> empty .)


state 24

    (23) parm_declaration -> id . COLON typename
    (24) parm_declaration -> id . COLON typename LBRACKET literal RBRACKET

    COLON           shift and go to state 37


state 25

    (29) expression -> MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 29 (expression -> MINUS expression .)
    MINUS           reduce using rule 29 (expression -> MINUS expression .)
    TIMES           reduce using rule 29 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 29 (expression -> MINUS expression .)
    LAND            reduce using rule 29 (expression -> MINUS expression .)
    LOR             reduce using rule 29 (expression -> MINUS expression .)
    BEGIN           reduce using rule 29 (expression -> MINUS expression .)
    BREAK           reduce using rule 29 (expression -> MINUS expression .)
    PRINT           reduce using rule 29 (expression -> MINUS expression .)
    IF              reduce using rule 29 (expression -> MINUS expression .)
    WHILE           reduce using rule 29 (expression -> MINUS expression .)
    READ            reduce using rule 29 (expression -> MINUS expression .)
    ID              reduce using rule 29 (expression -> MINUS expression .)
    THEN            reduce using rule 29 (expression -> MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> MINUS expression .)
    LT              reduce using rule 29 (expression -> MINUS expression .)
    GT              reduce using rule 29 (expression -> MINUS expression .)
    LE              reduce using rule 29 (expression -> MINUS expression .)
    GE              reduce using rule 29 (expression -> MINUS expression .)
    EQ              reduce using rule 29 (expression -> MINUS expression .)
    NE              reduce using rule 29 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 29 (expression -> MINUS expression .)
    COMMA           reduce using rule 29 (expression -> MINUS expression .)
    SEMI            reduce using rule 29 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 30 ]


state 26

    (53) expression -> typename LPAREN . id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 38

state 27

    (28) expression -> PLUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 28 (expression -> PLUS expression .)
    MINUS           reduce using rule 28 (expression -> PLUS expression .)
    TIMES           reduce using rule 28 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 28 (expression -> PLUS expression .)
    LAND            reduce using rule 28 (expression -> PLUS expression .)
    LOR             reduce using rule 28 (expression -> PLUS expression .)
    BEGIN           reduce using rule 28 (expression -> PLUS expression .)
    BREAK           reduce using rule 28 (expression -> PLUS expression .)
    PRINT           reduce using rule 28 (expression -> PLUS expression .)
    IF              reduce using rule 28 (expression -> PLUS expression .)
    WHILE           reduce using rule 28 (expression -> PLUS expression .)
    READ            reduce using rule 28 (expression -> PLUS expression .)
    ID              reduce using rule 28 (expression -> PLUS expression .)
    THEN            reduce using rule 28 (expression -> PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> PLUS expression .)
    LT              reduce using rule 28 (expression -> PLUS expression .)
    GT              reduce using rule 28 (expression -> PLUS expression .)
    LE              reduce using rule 28 (expression -> PLUS expression .)
    GE              reduce using rule 28 (expression -> PLUS expression .)
    EQ              reduce using rule 28 (expression -> PLUS expression .)
    NE              reduce using rule 28 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 28 (expression -> PLUS expression .)
    COMMA           reduce using rule 28 (expression -> PLUS expression .)
    SEMI            reduce using rule 28 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 30 ]


state 28

    (30) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 29

    (31) expression -> id LPAREN . exprlist RPAREN
    (32) expression -> id LPAREN . RPAREN
    (54) exprlist -> . exprlist COMMA expression
    (55) exprlist -> . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 42
    id                             shift and go to state 17
    exprlist                       shift and go to state 41

state 30

    (39) expression -> expression DIVIDE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 43
    id                             shift and go to state 17

state 31

    (37) expression -> expression MINUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 44
    id                             shift and go to state 17

state 32

    (36) expression -> expression PLUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 45
    id                             shift and go to state 17

state 33

    (62) id -> ID LBRACKET expression RBRACKET .

    COLON           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    LAND            reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    LOR             reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    READ            reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    THEN            reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 62 (id -> ID LBRACKET expression RBRACKET .)


state 34

    (38) expression -> expression TIMES . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 46
    id                             shift and go to state 17

state 35

    (19) function -> FUNC id LPAREN parameters RPAREN . locals BEGIN statements END
    (14) locals -> . locals local
    (15) locals -> . local
    (16) locals -> . empty
    (17) local -> . id COLON typename SEMI
    (18) local -> . id COLON typename LBRACKET literal RBRACKET SEMI
    (63) empty -> .
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

  ! shift/reduce conflict for ID resolved as shift
    BEGIN           reduce using rule 63 (empty -> .)
    ID              shift and go to state 4

  ! ID              [ reduce using rule 63 (empty -> .) ]

    locals                         shift and go to state 50
    local                          shift and go to state 48
    id                             shift and go to state 49
    empty                          shift and go to state 47

state 36

    (20) parameters -> parameters COMMA . parm_declaration
    (23) parm_declaration -> . id COLON typename
    (24) parm_declaration -> . id COLON typename LBRACKET literal RBRACKET
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    parm_declaration               shift and go to state 51
    id                             shift and go to state 24

state 37

    (23) parm_declaration -> id COLON . typename
    (24) parm_declaration -> id COLON . typename LBRACKET literal RBRACKET
    (60) typename -> . TYPENAME

    TYPENAME        shift and go to state 9

    typename                       shift and go to state 52

state 38

    (53) expression -> typename LPAREN id . RPAREN

    RPAREN          shift and go to state 53


state 39

    (30) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 30 (expression -> LPAREN expression RPAREN .)


state 40

    (32) expression -> id LPAREN RPAREN .

    PLUS            reduce using rule 32 (expression -> id LPAREN RPAREN .)
    MINUS           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    TIMES           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> id LPAREN RPAREN .)
    LAND            reduce using rule 32 (expression -> id LPAREN RPAREN .)
    LOR             reduce using rule 32 (expression -> id LPAREN RPAREN .)
    BEGIN           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    BREAK           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    PRINT           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    IF              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    WHILE           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    READ            reduce using rule 32 (expression -> id LPAREN RPAREN .)
    ID              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    THEN            reduce using rule 32 (expression -> id LPAREN RPAREN .)
    RPAREN          reduce using rule 32 (expression -> id LPAREN RPAREN .)
    LT              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    GT              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    LE              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    GE              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    EQ              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    NE              reduce using rule 32 (expression -> id LPAREN RPAREN .)
    RBRACKET        reduce using rule 32 (expression -> id LPAREN RPAREN .)
    COMMA           reduce using rule 32 (expression -> id LPAREN RPAREN .)
    SEMI            reduce using rule 32 (expression -> id LPAREN RPAREN .)


state 41

    (31) expression -> id LPAREN exprlist . RPAREN
    (54) exprlist -> exprlist . COMMA expression

    RPAREN          shift and go to state 54
    COMMA           shift and go to state 55


state 42

    (55) exprlist -> expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 55 (exprlist -> expression .)
    COMMA           reduce using rule 55 (exprlist -> expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 43

    (39) expression -> expression DIVIDE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 39 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 39 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 39 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 39 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 39 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 39 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 39 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 39 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 39 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 39 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 39 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 39 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 39 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 39 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 39 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 39 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 39 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 39 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 39 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 39 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 39 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 39 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 30 ]


state 44

    (37) expression -> expression MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 37 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 37 (expression -> expression MINUS expression .)
    LAND            reduce using rule 37 (expression -> expression MINUS expression .)
    LOR             reduce using rule 37 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 37 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 37 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 37 (expression -> expression MINUS expression .)
    IF              reduce using rule 37 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 37 (expression -> expression MINUS expression .)
    READ            reduce using rule 37 (expression -> expression MINUS expression .)
    ID              reduce using rule 37 (expression -> expression MINUS expression .)
    THEN            reduce using rule 37 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression MINUS expression .)
    LT              reduce using rule 37 (expression -> expression MINUS expression .)
    GT              reduce using rule 37 (expression -> expression MINUS expression .)
    LE              reduce using rule 37 (expression -> expression MINUS expression .)
    GE              reduce using rule 37 (expression -> expression MINUS expression .)
    EQ              reduce using rule 37 (expression -> expression MINUS expression .)
    NE              reduce using rule 37 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 37 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 37 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 37 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30

  ! TIMES           [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]


state 45

    (36) expression -> expression PLUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 36 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 36 (expression -> expression PLUS expression .)
    LAND            reduce using rule 36 (expression -> expression PLUS expression .)
    LOR             reduce using rule 36 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 36 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 36 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 36 (expression -> expression PLUS expression .)
    IF              reduce using rule 36 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 36 (expression -> expression PLUS expression .)
    READ            reduce using rule 36 (expression -> expression PLUS expression .)
    ID              reduce using rule 36 (expression -> expression PLUS expression .)
    THEN            reduce using rule 36 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 36 (expression -> expression PLUS expression .)
    LT              reduce using rule 36 (expression -> expression PLUS expression .)
    GT              reduce using rule 36 (expression -> expression PLUS expression .)
    LE              reduce using rule 36 (expression -> expression PLUS expression .)
    GE              reduce using rule 36 (expression -> expression PLUS expression .)
    EQ              reduce using rule 36 (expression -> expression PLUS expression .)
    NE              reduce using rule 36 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 36 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 36 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 36 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30

  ! TIMES           [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]


state 46

    (38) expression -> expression TIMES expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 38 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 38 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 38 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 38 (expression -> expression TIMES expression .)
    LAND            reduce using rule 38 (expression -> expression TIMES expression .)
    LOR             reduce using rule 38 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 38 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 38 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 38 (expression -> expression TIMES expression .)
    IF              reduce using rule 38 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 38 (expression -> expression TIMES expression .)
    READ            reduce using rule 38 (expression -> expression TIMES expression .)
    ID              reduce using rule 38 (expression -> expression TIMES expression .)
    THEN            reduce using rule 38 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 38 (expression -> expression TIMES expression .)
    LT              reduce using rule 38 (expression -> expression TIMES expression .)
    GT              reduce using rule 38 (expression -> expression TIMES expression .)
    LE              reduce using rule 38 (expression -> expression TIMES expression .)
    GE              reduce using rule 38 (expression -> expression TIMES expression .)
    EQ              reduce using rule 38 (expression -> expression TIMES expression .)
    NE              reduce using rule 38 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 38 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 38 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 38 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 30 ]


state 47

    (16) locals -> empty .

    BEGIN           reduce using rule 16 (locals -> empty .)
    ID              reduce using rule 16 (locals -> empty .)


state 48

    (15) locals -> local .

    BEGIN           reduce using rule 15 (locals -> local .)
    ID              reduce using rule 15 (locals -> local .)


state 49

    (17) local -> id . COLON typename SEMI
    (18) local -> id . COLON typename LBRACKET literal RBRACKET SEMI

    COLON           shift and go to state 56


state 50

    (19) function -> FUNC id LPAREN parameters RPAREN locals . BEGIN statements END
    (14) locals -> locals . local
    (17) local -> . id COLON typename SEMI
    (18) local -> . id COLON typename LBRACKET literal RBRACKET SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 57
    ID              shift and go to state 4

    local                          shift and go to state 58
    id                             shift and go to state 49

state 51

    (20) parameters -> parameters COMMA parm_declaration .

    RPAREN          reduce using rule 20 (parameters -> parameters COMMA parm_declaration .)
    COMMA           reduce using rule 20 (parameters -> parameters COMMA parm_declaration .)


state 52

    (23) parm_declaration -> id COLON typename .
    (24) parm_declaration -> id COLON typename . LBRACKET literal RBRACKET

    RPAREN          reduce using rule 23 (parm_declaration -> id COLON typename .)
    COMMA           reduce using rule 23 (parm_declaration -> id COLON typename .)
    LBRACKET        shift and go to state 59


state 53

    (53) expression -> typename LPAREN id RPAREN .

    PLUS            reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    MINUS           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    TIMES           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    DIVIDE          reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    LAND            reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    LOR             reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    BEGIN           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    BREAK           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    PRINT           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    IF              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    WHILE           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    READ            reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    ID              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    THEN            reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    RPAREN          reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    LT              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    GT              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    LE              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    GE              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    EQ              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    NE              reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    RBRACKET        reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    COMMA           reduce using rule 53 (expression -> typename LPAREN id RPAREN .)
    SEMI            reduce using rule 53 (expression -> typename LPAREN id RPAREN .)


state 54

    (31) expression -> id LPAREN exprlist RPAREN .

    PLUS            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    MINUS           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    TIMES           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LAND            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LOR             reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    BEGIN           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    BREAK           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    PRINT           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    IF              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    WHILE           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    READ            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    ID              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    THEN            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    RPAREN          reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LT              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    GT              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    GE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    EQ              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    NE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    RBRACKET        reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    COMMA           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    SEMI            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)


state 55

    (54) exprlist -> exprlist COMMA . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 60
    id                             shift and go to state 17

state 56

    (17) local -> id COLON . typename SEMI
    (18) local -> id COLON . typename LBRACKET literal RBRACKET SEMI
    (60) typename -> . TYPENAME

    TYPENAME        shift and go to state 9

    typename                       shift and go to state 61

state 57

    (19) function -> FUNC id LPAREN parameters RPAREN locals BEGIN . statements END
    (3) statements -> . statement
    (4) statements -> . BEGIN st END
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (33) if -> . IF cond THEN statements
    (34) if_else -> . IF cond THEN statements ELSE statements
    (35) while -> . WHILE cond statements
    (27) read -> . READ LPAREN id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 69
    BREAK           shift and go to state 74
    PRINT           shift and go to state 65
    IF              shift and go to state 73
    WHILE           shift and go to state 64
    READ            shift and go to state 63
    ID              shift and go to state 4

    assign                         shift and go to state 76
    statements                     shift and go to state 62
    read                           shift and go to state 72
    while                          shift and go to state 75
    statement                      shift and go to state 70
    print                          shift and go to state 71
    if_else                        shift and go to state 66
    id                             shift and go to state 67
    if                             shift and go to state 68

state 58

    (14) locals -> locals local .

    BEGIN           reduce using rule 14 (locals -> locals local .)
    ID              reduce using rule 14 (locals -> locals local .)


state 59

    (24) parm_declaration -> id COLON typename LBRACKET . literal RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN

    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14

    literal                        shift and go to state 77

state 60

    (54) exprlist -> exprlist COMMA expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 54 (exprlist -> exprlist COMMA expression .)
    COMMA           reduce using rule 54 (exprlist -> exprlist COMMA expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 61

    (17) local -> id COLON typename . SEMI
    (18) local -> id COLON typename . LBRACKET literal RBRACKET SEMI

    SEMI            shift and go to state 78
    LBRACKET        shift and go to state 79


state 62

    (19) function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements . END

    END             shift and go to state 80


state 63

    (27) read -> READ . LPAREN id RPAREN SEMI

    LPAREN          shift and go to state 81


state 64

    (35) while -> WHILE . cond statements
    (40) cond -> . expression LT expression
    (41) cond -> . expression GT expression
    (42) cond -> . expression LE expression
    (43) cond -> . expression GE expression
    (44) cond -> . expression EQ expression
    (45) cond -> . expression NE expression
    (46) cond -> . cond LAND cond
    (47) cond -> . cond LOR cond
    (48) cond -> . LNOT cond
    (49) cond -> . id
    (50) cond -> . literal
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    LNOT            shift and go to state 82
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    id                             shift and go to state 84
    typename                       shift and go to state 12
    literal                        shift and go to state 85
    cond                           shift and go to state 83
    expression                     shift and go to state 86

state 65

    (26) print -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 87


state 66

    (10) statement -> if_else .

    END             reduce using rule 10 (statement -> if_else .)
    BREAK           reduce using rule 10 (statement -> if_else .)
    PRINT           reduce using rule 10 (statement -> if_else .)
    IF              reduce using rule 10 (statement -> if_else .)
    WHILE           reduce using rule 10 (statement -> if_else .)
    READ            reduce using rule 10 (statement -> if_else .)
    ID              reduce using rule 10 (statement -> if_else .)
    ELSE            reduce using rule 10 (statement -> if_else .)


state 67

    (25) assign -> id . ASSIGN expression SEMI

    ASSIGN          shift and go to state 88


state 68

    (9) statement -> if .

    END             reduce using rule 9 (statement -> if .)
    BREAK           reduce using rule 9 (statement -> if .)
    PRINT           reduce using rule 9 (statement -> if .)
    IF              reduce using rule 9 (statement -> if .)
    WHILE           reduce using rule 9 (statement -> if .)
    READ            reduce using rule 9 (statement -> if .)
    ID              reduce using rule 9 (statement -> if .)
    ELSE            reduce using rule 9 (statement -> if .)


state 69

    (4) statements -> BEGIN . st END
    (5) st -> . st statement
    (6) st -> . empty
    (63) empty -> .

    END             reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    PRINT           reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    READ            reduce using rule 63 (empty -> .)
    ID              reduce using rule 63 (empty -> .)

    empty                          shift and go to state 89
    st                             shift and go to state 90

state 70

    (3) statements -> statement .

    END             reduce using rule 3 (statements -> statement .)
    BREAK           reduce using rule 3 (statements -> statement .)
    PRINT           reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    READ            reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    ELSE            reduce using rule 3 (statements -> statement .)


state 71

    (8) statement -> print .

    END             reduce using rule 8 (statement -> print .)
    BREAK           reduce using rule 8 (statement -> print .)
    PRINT           reduce using rule 8 (statement -> print .)
    IF              reduce using rule 8 (statement -> print .)
    WHILE           reduce using rule 8 (statement -> print .)
    READ            reduce using rule 8 (statement -> print .)
    ID              reduce using rule 8 (statement -> print .)
    ELSE            reduce using rule 8 (statement -> print .)


state 72

    (13) statement -> read .

    END             reduce using rule 13 (statement -> read .)
    BREAK           reduce using rule 13 (statement -> read .)
    PRINT           reduce using rule 13 (statement -> read .)
    IF              reduce using rule 13 (statement -> read .)
    WHILE           reduce using rule 13 (statement -> read .)
    READ            reduce using rule 13 (statement -> read .)
    ID              reduce using rule 13 (statement -> read .)
    ELSE            reduce using rule 13 (statement -> read .)


state 73

    (33) if -> IF . cond THEN statements
    (34) if_else -> IF . cond THEN statements ELSE statements
    (40) cond -> . expression LT expression
    (41) cond -> . expression GT expression
    (42) cond -> . expression LE expression
    (43) cond -> . expression GE expression
    (44) cond -> . expression EQ expression
    (45) cond -> . expression NE expression
    (46) cond -> . cond LAND cond
    (47) cond -> . cond LOR cond
    (48) cond -> . LNOT cond
    (49) cond -> . id
    (50) cond -> . literal
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    LNOT            shift and go to state 82
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    id                             shift and go to state 84
    typename                       shift and go to state 12
    literal                        shift and go to state 85
    cond                           shift and go to state 91
    expression                     shift and go to state 86

state 74

    (12) statement -> BREAK .

    END             reduce using rule 12 (statement -> BREAK .)
    BREAK           reduce using rule 12 (statement -> BREAK .)
    PRINT           reduce using rule 12 (statement -> BREAK .)
    IF              reduce using rule 12 (statement -> BREAK .)
    WHILE           reduce using rule 12 (statement -> BREAK .)
    READ            reduce using rule 12 (statement -> BREAK .)
    ID              reduce using rule 12 (statement -> BREAK .)
    ELSE            reduce using rule 12 (statement -> BREAK .)


state 75

    (11) statement -> while .

    END             reduce using rule 11 (statement -> while .)
    BREAK           reduce using rule 11 (statement -> while .)
    PRINT           reduce using rule 11 (statement -> while .)
    IF              reduce using rule 11 (statement -> while .)
    WHILE           reduce using rule 11 (statement -> while .)
    READ            reduce using rule 11 (statement -> while .)
    ID              reduce using rule 11 (statement -> while .)
    ELSE            reduce using rule 11 (statement -> while .)


state 76

    (7) statement -> assign .

    END             reduce using rule 7 (statement -> assign .)
    BREAK           reduce using rule 7 (statement -> assign .)
    PRINT           reduce using rule 7 (statement -> assign .)
    IF              reduce using rule 7 (statement -> assign .)
    WHILE           reduce using rule 7 (statement -> assign .)
    READ            reduce using rule 7 (statement -> assign .)
    ID              reduce using rule 7 (statement -> assign .)
    ELSE            reduce using rule 7 (statement -> assign .)


state 77

    (24) parm_declaration -> id COLON typename LBRACKET literal . RBRACKET

    RBRACKET        shift and go to state 92


state 78

    (17) local -> id COLON typename SEMI .

    BEGIN           reduce using rule 17 (local -> id COLON typename SEMI .)
    ID              reduce using rule 17 (local -> id COLON typename SEMI .)


state 79

    (18) local -> id COLON typename LBRACKET . literal RBRACKET SEMI
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN

    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14

    literal                        shift and go to state 93

state 80

    (19) function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .

    FUNC            reduce using rule 19 (function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .)
    $end            reduce using rule 19 (function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .)


state 81

    (27) read -> READ LPAREN . id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 94

state 82

    (48) cond -> LNOT . cond
    (40) cond -> . expression LT expression
    (41) cond -> . expression GT expression
    (42) cond -> . expression LE expression
    (43) cond -> . expression GE expression
    (44) cond -> . expression EQ expression
    (45) cond -> . expression NE expression
    (46) cond -> . cond LAND cond
    (47) cond -> . cond LOR cond
    (48) cond -> . LNOT cond
    (49) cond -> . id
    (50) cond -> . literal
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    LNOT            shift and go to state 82
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 85
    cond                           shift and go to state 95
    expression                     shift and go to state 86
    id                             shift and go to state 84

state 83

    (35) while -> WHILE cond . statements
    (46) cond -> cond . LAND cond
    (47) cond -> cond . LOR cond
    (3) statements -> . statement
    (4) statements -> . BEGIN st END
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (33) if -> . IF cond THEN statements
    (34) if_else -> . IF cond THEN statements ELSE statements
    (35) while -> . WHILE cond statements
    (27) read -> . READ LPAREN id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    LAND            shift and go to state 98
    LOR             shift and go to state 97
    BEGIN           shift and go to state 69
    BREAK           shift and go to state 74
    PRINT           shift and go to state 65
    IF              shift and go to state 73
    WHILE           shift and go to state 64
    READ            shift and go to state 63
    ID              shift and go to state 4

    statements                     shift and go to state 96
    read                           shift and go to state 72
    id                             shift and go to state 67
    while                          shift and go to state 75
    statement                      shift and go to state 70
    print                          shift and go to state 71
    if_else                        shift and go to state 66
    assign                         shift and go to state 76
    if                             shift and go to state 68

state 84

    (49) cond -> id .
    (31) expression -> id . LPAREN exprlist RPAREN
    (32) expression -> id . LPAREN RPAREN
    (51) expression -> id .

    LAND            reduce using rule 49 (cond -> id .)
    LOR             reduce using rule 49 (cond -> id .)
    BEGIN           reduce using rule 49 (cond -> id .)
    BREAK           reduce using rule 49 (cond -> id .)
    PRINT           reduce using rule 49 (cond -> id .)
    IF              reduce using rule 49 (cond -> id .)
    WHILE           reduce using rule 49 (cond -> id .)
    READ            reduce using rule 49 (cond -> id .)
    ID              reduce using rule 49 (cond -> id .)
    THEN            reduce using rule 49 (cond -> id .)
    LPAREN          shift and go to state 29
    LT              reduce using rule 51 (expression -> id .)
    GT              reduce using rule 51 (expression -> id .)
    LE              reduce using rule 51 (expression -> id .)
    GE              reduce using rule 51 (expression -> id .)
    EQ              reduce using rule 51 (expression -> id .)
    NE              reduce using rule 51 (expression -> id .)
    PLUS            reduce using rule 51 (expression -> id .)
    MINUS           reduce using rule 51 (expression -> id .)
    TIMES           reduce using rule 51 (expression -> id .)
    DIVIDE          reduce using rule 51 (expression -> id .)


state 85

    (50) cond -> literal .
    (52) expression -> literal .

    LAND            reduce using rule 50 (cond -> literal .)
    LOR             reduce using rule 50 (cond -> literal .)
    BEGIN           reduce using rule 50 (cond -> literal .)
    BREAK           reduce using rule 50 (cond -> literal .)
    PRINT           reduce using rule 50 (cond -> literal .)
    IF              reduce using rule 50 (cond -> literal .)
    WHILE           reduce using rule 50 (cond -> literal .)
    READ            reduce using rule 50 (cond -> literal .)
    ID              reduce using rule 50 (cond -> literal .)
    THEN            reduce using rule 50 (cond -> literal .)
    LT              reduce using rule 52 (expression -> literal .)
    GT              reduce using rule 52 (expression -> literal .)
    LE              reduce using rule 52 (expression -> literal .)
    GE              reduce using rule 52 (expression -> literal .)
    EQ              reduce using rule 52 (expression -> literal .)
    NE              reduce using rule 52 (expression -> literal .)
    PLUS            reduce using rule 52 (expression -> literal .)
    MINUS           reduce using rule 52 (expression -> literal .)
    TIMES           reduce using rule 52 (expression -> literal .)
    DIVIDE          reduce using rule 52 (expression -> literal .)


state 86

    (40) cond -> expression . LT expression
    (41) cond -> expression . GT expression
    (42) cond -> expression . LE expression
    (43) cond -> expression . GE expression
    (44) cond -> expression . EQ expression
    (45) cond -> expression . NE expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LT              shift and go to state 101
    GT              shift and go to state 99
    LE              shift and go to state 104
    GE              shift and go to state 103
    EQ              shift and go to state 100
    NE              shift and go to state 102
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 87

    (26) print -> PRINT LPAREN . expression RPAREN SEMI
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 105
    id                             shift and go to state 17

state 88

    (25) assign -> id ASSIGN . expression SEMI
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 106
    id                             shift and go to state 17

state 89

    (6) st -> empty .

    END             reduce using rule 6 (st -> empty .)
    BREAK           reduce using rule 6 (st -> empty .)
    PRINT           reduce using rule 6 (st -> empty .)
    IF              reduce using rule 6 (st -> empty .)
    WHILE           reduce using rule 6 (st -> empty .)
    READ            reduce using rule 6 (st -> empty .)
    ID              reduce using rule 6 (st -> empty .)


state 90

    (4) statements -> BEGIN st . END
    (5) st -> st . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (33) if -> . IF cond THEN statements
    (34) if_else -> . IF cond THEN statements ELSE statements
    (35) while -> . WHILE cond statements
    (27) read -> . READ LPAREN id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    END             shift and go to state 108
    BREAK           shift and go to state 74
    PRINT           shift and go to state 65
    IF              shift and go to state 73
    WHILE           shift and go to state 64
    READ            shift and go to state 63
    ID              shift and go to state 4

    if_else                        shift and go to state 66
    read                           shift and go to state 72
    id                             shift and go to state 67
    while                          shift and go to state 75
    statement                      shift and go to state 107
    print                          shift and go to state 71
    assign                         shift and go to state 76
    if                             shift and go to state 68

state 91

    (33) if -> IF cond . THEN statements
    (34) if_else -> IF cond . THEN statements ELSE statements
    (46) cond -> cond . LAND cond
    (47) cond -> cond . LOR cond

    THEN            shift and go to state 109
    LAND            shift and go to state 98
    LOR             shift and go to state 97


state 92

    (24) parm_declaration -> id COLON typename LBRACKET literal RBRACKET .

    RPAREN          reduce using rule 24 (parm_declaration -> id COLON typename LBRACKET literal RBRACKET .)
    COMMA           reduce using rule 24 (parm_declaration -> id COLON typename LBRACKET literal RBRACKET .)


state 93

    (18) local -> id COLON typename LBRACKET literal . RBRACKET SEMI

    RBRACKET        shift and go to state 110


state 94

    (27) read -> READ LPAREN id . RPAREN SEMI

    RPAREN          shift and go to state 111


state 95

    (48) cond -> LNOT cond .
    (46) cond -> cond . LAND cond
    (47) cond -> cond . LOR cond

    LAND            reduce using rule 48 (cond -> LNOT cond .)
    LOR             reduce using rule 48 (cond -> LNOT cond .)
    BEGIN           reduce using rule 48 (cond -> LNOT cond .)
    BREAK           reduce using rule 48 (cond -> LNOT cond .)
    PRINT           reduce using rule 48 (cond -> LNOT cond .)
    IF              reduce using rule 48 (cond -> LNOT cond .)
    WHILE           reduce using rule 48 (cond -> LNOT cond .)
    READ            reduce using rule 48 (cond -> LNOT cond .)
    ID              reduce using rule 48 (cond -> LNOT cond .)
    THEN            reduce using rule 48 (cond -> LNOT cond .)

  ! LAND            [ shift and go to state 98 ]
  ! LOR             [ shift and go to state 97 ]


state 96

    (35) while -> WHILE cond statements .

    END             reduce using rule 35 (while -> WHILE cond statements .)
    BREAK           reduce using rule 35 (while -> WHILE cond statements .)
    PRINT           reduce using rule 35 (while -> WHILE cond statements .)
    IF              reduce using rule 35 (while -> WHILE cond statements .)
    WHILE           reduce using rule 35 (while -> WHILE cond statements .)
    READ            reduce using rule 35 (while -> WHILE cond statements .)
    ID              reduce using rule 35 (while -> WHILE cond statements .)
    ELSE            reduce using rule 35 (while -> WHILE cond statements .)


state 97

    (47) cond -> cond LOR . cond
    (40) cond -> . expression LT expression
    (41) cond -> . expression GT expression
    (42) cond -> . expression LE expression
    (43) cond -> . expression GE expression
    (44) cond -> . expression EQ expression
    (45) cond -> . expression NE expression
    (46) cond -> . cond LAND cond
    (47) cond -> . cond LOR cond
    (48) cond -> . LNOT cond
    (49) cond -> . id
    (50) cond -> . literal
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    LNOT            shift and go to state 82
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 85
    cond                           shift and go to state 112
    expression                     shift and go to state 86
    id                             shift and go to state 84

state 98

    (46) cond -> cond LAND . cond
    (40) cond -> . expression LT expression
    (41) cond -> . expression GT expression
    (42) cond -> . expression LE expression
    (43) cond -> . expression GE expression
    (44) cond -> . expression EQ expression
    (45) cond -> . expression NE expression
    (46) cond -> . cond LAND cond
    (47) cond -> . cond LOR cond
    (48) cond -> . LNOT cond
    (49) cond -> . id
    (50) cond -> . literal
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    LNOT            shift and go to state 82
    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 85
    cond                           shift and go to state 113
    expression                     shift and go to state 86
    id                             shift and go to state 84

state 99

    (41) cond -> expression GT . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 114
    id                             shift and go to state 17

state 100

    (44) cond -> expression EQ . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 115
    id                             shift and go to state 17

state 101

    (40) cond -> expression LT . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 116
    id                             shift and go to state 17

state 102

    (45) cond -> expression NE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 117
    id                             shift and go to state 17

state 103

    (43) cond -> expression GE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 118
    id                             shift and go to state 17

state 104

    (42) cond -> expression LE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (32) expression -> . id LPAREN RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (51) expression -> . id
    (52) expression -> . literal
    (53) expression -> . typename LPAREN id RPAREN
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET
    (56) literal -> . INTEGER
    (57) literal -> . FLOAT
    (58) literal -> . STRING
    (59) literal -> . BOOLEAN
    (60) typename -> . TYPENAME

    PLUS            shift and go to state 15
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 16
    ID              shift and go to state 4
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 10
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 14
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 119
    id                             shift and go to state 17

state 105

    (26) print -> PRINT LPAREN expression . RPAREN SEMI
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 120
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 106

    (25) assign -> id ASSIGN expression . SEMI
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 121
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 107

    (5) st -> st statement .

    END             reduce using rule 5 (st -> st statement .)
    BREAK           reduce using rule 5 (st -> st statement .)
    PRINT           reduce using rule 5 (st -> st statement .)
    IF              reduce using rule 5 (st -> st statement .)
    WHILE           reduce using rule 5 (st -> st statement .)
    READ            reduce using rule 5 (st -> st statement .)
    ID              reduce using rule 5 (st -> st statement .)


state 108

    (4) statements -> BEGIN st END .

    END             reduce using rule 4 (statements -> BEGIN st END .)
    BREAK           reduce using rule 4 (statements -> BEGIN st END .)
    PRINT           reduce using rule 4 (statements -> BEGIN st END .)
    IF              reduce using rule 4 (statements -> BEGIN st END .)
    WHILE           reduce using rule 4 (statements -> BEGIN st END .)
    READ            reduce using rule 4 (statements -> BEGIN st END .)
    ID              reduce using rule 4 (statements -> BEGIN st END .)
    ELSE            reduce using rule 4 (statements -> BEGIN st END .)


state 109

    (33) if -> IF cond THEN . statements
    (34) if_else -> IF cond THEN . statements ELSE statements
    (3) statements -> . statement
    (4) statements -> . BEGIN st END
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (33) if -> . IF cond THEN statements
    (34) if_else -> . IF cond THEN statements ELSE statements
    (35) while -> . WHILE cond statements
    (27) read -> . READ LPAREN id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 69
    BREAK           shift and go to state 74
    PRINT           shift and go to state 65
    IF              shift and go to state 73
    WHILE           shift and go to state 64
    READ            shift and go to state 63
    ID              shift and go to state 4

    statements                     shift and go to state 122
    read                           shift and go to state 72
    id                             shift and go to state 67
    while                          shift and go to state 75
    statement                      shift and go to state 70
    print                          shift and go to state 71
    if_else                        shift and go to state 66
    assign                         shift and go to state 76
    if                             shift and go to state 68

state 110

    (18) local -> id COLON typename LBRACKET literal RBRACKET . SEMI

    SEMI            shift and go to state 123


state 111

    (27) read -> READ LPAREN id RPAREN . SEMI

    SEMI            shift and go to state 124


state 112

    (47) cond -> cond LOR cond .
    (46) cond -> cond . LAND cond
    (47) cond -> cond . LOR cond

    LOR             reduce using rule 47 (cond -> cond LOR cond .)
    BEGIN           reduce using rule 47 (cond -> cond LOR cond .)
    BREAK           reduce using rule 47 (cond -> cond LOR cond .)
    PRINT           reduce using rule 47 (cond -> cond LOR cond .)
    IF              reduce using rule 47 (cond -> cond LOR cond .)
    WHILE           reduce using rule 47 (cond -> cond LOR cond .)
    READ            reduce using rule 47 (cond -> cond LOR cond .)
    ID              reduce using rule 47 (cond -> cond LOR cond .)
    THEN            reduce using rule 47 (cond -> cond LOR cond .)
    LAND            shift and go to state 98

  ! LAND            [ reduce using rule 47 (cond -> cond LOR cond .) ]
  ! LOR             [ shift and go to state 97 ]


state 113

    (46) cond -> cond LAND cond .
    (46) cond -> cond . LAND cond
    (47) cond -> cond . LOR cond

    LAND            reduce using rule 46 (cond -> cond LAND cond .)
    LOR             reduce using rule 46 (cond -> cond LAND cond .)
    BEGIN           reduce using rule 46 (cond -> cond LAND cond .)
    BREAK           reduce using rule 46 (cond -> cond LAND cond .)
    PRINT           reduce using rule 46 (cond -> cond LAND cond .)
    IF              reduce using rule 46 (cond -> cond LAND cond .)
    WHILE           reduce using rule 46 (cond -> cond LAND cond .)
    READ            reduce using rule 46 (cond -> cond LAND cond .)
    ID              reduce using rule 46 (cond -> cond LAND cond .)
    THEN            reduce using rule 46 (cond -> cond LAND cond .)

  ! LAND            [ shift and go to state 98 ]
  ! LOR             [ shift and go to state 97 ]


state 114

    (41) cond -> expression GT expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 41 (cond -> expression GT expression .)
    LOR             reduce using rule 41 (cond -> expression GT expression .)
    BEGIN           reduce using rule 41 (cond -> expression GT expression .)
    BREAK           reduce using rule 41 (cond -> expression GT expression .)
    PRINT           reduce using rule 41 (cond -> expression GT expression .)
    IF              reduce using rule 41 (cond -> expression GT expression .)
    WHILE           reduce using rule 41 (cond -> expression GT expression .)
    READ            reduce using rule 41 (cond -> expression GT expression .)
    ID              reduce using rule 41 (cond -> expression GT expression .)
    THEN            reduce using rule 41 (cond -> expression GT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 115

    (44) cond -> expression EQ expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 44 (cond -> expression EQ expression .)
    LOR             reduce using rule 44 (cond -> expression EQ expression .)
    BEGIN           reduce using rule 44 (cond -> expression EQ expression .)
    BREAK           reduce using rule 44 (cond -> expression EQ expression .)
    PRINT           reduce using rule 44 (cond -> expression EQ expression .)
    IF              reduce using rule 44 (cond -> expression EQ expression .)
    WHILE           reduce using rule 44 (cond -> expression EQ expression .)
    READ            reduce using rule 44 (cond -> expression EQ expression .)
    ID              reduce using rule 44 (cond -> expression EQ expression .)
    THEN            reduce using rule 44 (cond -> expression EQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 116

    (40) cond -> expression LT expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 40 (cond -> expression LT expression .)
    LOR             reduce using rule 40 (cond -> expression LT expression .)
    BEGIN           reduce using rule 40 (cond -> expression LT expression .)
    BREAK           reduce using rule 40 (cond -> expression LT expression .)
    PRINT           reduce using rule 40 (cond -> expression LT expression .)
    IF              reduce using rule 40 (cond -> expression LT expression .)
    WHILE           reduce using rule 40 (cond -> expression LT expression .)
    READ            reduce using rule 40 (cond -> expression LT expression .)
    ID              reduce using rule 40 (cond -> expression LT expression .)
    THEN            reduce using rule 40 (cond -> expression LT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 117

    (45) cond -> expression NE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 45 (cond -> expression NE expression .)
    LOR             reduce using rule 45 (cond -> expression NE expression .)
    BEGIN           reduce using rule 45 (cond -> expression NE expression .)
    BREAK           reduce using rule 45 (cond -> expression NE expression .)
    PRINT           reduce using rule 45 (cond -> expression NE expression .)
    IF              reduce using rule 45 (cond -> expression NE expression .)
    WHILE           reduce using rule 45 (cond -> expression NE expression .)
    READ            reduce using rule 45 (cond -> expression NE expression .)
    ID              reduce using rule 45 (cond -> expression NE expression .)
    THEN            reduce using rule 45 (cond -> expression NE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 118

    (43) cond -> expression GE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 43 (cond -> expression GE expression .)
    LOR             reduce using rule 43 (cond -> expression GE expression .)
    BEGIN           reduce using rule 43 (cond -> expression GE expression .)
    BREAK           reduce using rule 43 (cond -> expression GE expression .)
    PRINT           reduce using rule 43 (cond -> expression GE expression .)
    IF              reduce using rule 43 (cond -> expression GE expression .)
    WHILE           reduce using rule 43 (cond -> expression GE expression .)
    READ            reduce using rule 43 (cond -> expression GE expression .)
    ID              reduce using rule 43 (cond -> expression GE expression .)
    THEN            reduce using rule 43 (cond -> expression GE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 119

    (42) cond -> expression LE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression

    LAND            reduce using rule 42 (cond -> expression LE expression .)
    LOR             reduce using rule 42 (cond -> expression LE expression .)
    BEGIN           reduce using rule 42 (cond -> expression LE expression .)
    BREAK           reduce using rule 42 (cond -> expression LE expression .)
    PRINT           reduce using rule 42 (cond -> expression LE expression .)
    IF              reduce using rule 42 (cond -> expression LE expression .)
    WHILE           reduce using rule 42 (cond -> expression LE expression .)
    READ            reduce using rule 42 (cond -> expression LE expression .)
    ID              reduce using rule 42 (cond -> expression LE expression .)
    THEN            reduce using rule 42 (cond -> expression LE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 30


state 120

    (26) print -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 125


state 121

    (25) assign -> id ASSIGN expression SEMI .

    END             reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    BREAK           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    PRINT           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    IF              reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    WHILE           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    READ            reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    ID              reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    ELSE            reduce using rule 25 (assign -> id ASSIGN expression SEMI .)


state 122

    (33) if -> IF cond THEN statements .
    (34) if_else -> IF cond THEN statements . ELSE statements

    END             reduce using rule 33 (if -> IF cond THEN statements .)
    BREAK           reduce using rule 33 (if -> IF cond THEN statements .)
    PRINT           reduce using rule 33 (if -> IF cond THEN statements .)
    IF              reduce using rule 33 (if -> IF cond THEN statements .)
    WHILE           reduce using rule 33 (if -> IF cond THEN statements .)
    READ            reduce using rule 33 (if -> IF cond THEN statements .)
    ID              reduce using rule 33 (if -> IF cond THEN statements .)
    ELSE            shift and go to state 126

  ! ELSE            [ reduce using rule 33 (if -> IF cond THEN statements .) ]


state 123

    (18) local -> id COLON typename LBRACKET literal RBRACKET SEMI .

    BEGIN           reduce using rule 18 (local -> id COLON typename LBRACKET literal RBRACKET SEMI .)
    ID              reduce using rule 18 (local -> id COLON typename LBRACKET literal RBRACKET SEMI .)


state 124

    (27) read -> READ LPAREN id RPAREN SEMI .

    END             reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    BREAK           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    PRINT           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    IF              reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    WHILE           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    READ            reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    ID              reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    ELSE            reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)


state 125

    (26) print -> PRINT LPAREN expression RPAREN SEMI .

    END             reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)


state 126

    (34) if_else -> IF cond THEN statements ELSE . statements
    (3) statements -> . statement
    (4) statements -> . BEGIN st END
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (33) if -> . IF cond THEN statements
    (34) if_else -> . IF cond THEN statements ELSE statements
    (35) while -> . WHILE cond statements
    (27) read -> . READ LPAREN id RPAREN SEMI
    (61) id -> . ID
    (62) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 69
    BREAK           shift and go to state 74
    PRINT           shift and go to state 65
    IF              shift and go to state 73
    WHILE           shift and go to state 64
    READ            shift and go to state 63
    ID              shift and go to state 4

    statements                     shift and go to state 127
    read                           shift and go to state 72
    id                             shift and go to state 67
    while                          shift and go to state 75
    statement                      shift and go to state 70
    print                          shift and go to state 71
    if_else                        shift and go to state 66
    assign                         shift and go to state 76
    if                             shift and go to state 68

state 127

    (34) if_else -> IF cond THEN statements ELSE statements .

    END             reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    BREAK           reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    PRINT           reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    IF              reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    WHILE           reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    READ            reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    ID              reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)
    ELSE            reduce using rule 34 (if_else -> IF cond THEN statements ELSE statements .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
