Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program function
Rule 2     program -> function
Rule 3     st -> BEGIN statements END
Rule 4     st -> statement
Rule 5     statements -> statement
Rule 6     statements -> statements statement
Rule 7     statement -> assign
Rule 8     statement -> print
Rule 9     statement -> if
Rule 10    statement -> if_else
Rule 11    statement -> while
Rule 12    statement -> BREAK
Rule 13    statement -> read
Rule 14    locals -> locals local
Rule 15    locals -> local
Rule 16    local -> id COLON typename SEMI
Rule 17    local -> id COLON typename LBRACKET literal RBRACKET SEMI
Rule 18    function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END
Rule 19    function -> FUNC id LPAREN parameters RPAREN BEGIN statements END
Rule 20    parameters -> parameters COMMA parm_declaration
Rule 21    parameters -> parm_declaration
Rule 22    parameters -> empty
Rule 23    parm_declaration -> id COLON typename
Rule 24    parm_declaration -> id COLON typename LBRACKET literal RBRACKET
Rule 25    assign -> id ASSIGN expression SEMI
Rule 26    print -> PRINT LPAREN expression RPAREN SEMI
Rule 27    read -> READ LPAREN id RPAREN SEMI
Rule 28    expression -> PLUS expression
Rule 29    expression -> MINUS expression
Rule 30    expression -> LPAREN expression RPAREN
Rule 31    expression -> id LPAREN exprlist RPAREN
Rule 32    if -> IF cond THEN st
Rule 33    if_else -> IF cond THEN st ELSE st
Rule 34    while -> WHILE cond st
Rule 35    expression -> expression PLUS expression
Rule 36    expression -> expression MINUS expression
Rule 37    expression -> expression TIMES expression
Rule 38    expression -> expression DIVIDE expression
Rule 39    cond -> expression LT expression
Rule 40    cond -> expression GT expression
Rule 41    cond -> expression LE expression
Rule 42    cond -> expression GE expression
Rule 43    cond -> expression EQ expression
Rule 44    cond -> expression NE expression
Rule 45    cond -> cond LAND cond
Rule 46    cond -> cond LOR cond
Rule 47    cond -> LNOT cond
Rule 48    cond -> LPAREN cond RPAREN
Rule 49    expression -> id
Rule 50    expression -> literal
Rule 51    expression -> typename LPAREN id RPAREN
Rule 52    exprlist -> exprlist COMMA expression
Rule 53    exprlist -> expression
Rule 54    exprlist -> empty
Rule 55    literal -> INTEGER
Rule 56    literal -> FLOAT
Rule 57    literal -> STRING
Rule 58    typename -> TYPENAME
Rule 59    id -> ID
Rule 60    id -> ID LBRACKET expression RBRACKET
Rule 61    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 25
BEGIN                : 3 18 19
BREAK                : 12
COLON                : 16 17 23 24
COMMA                : 20 52
DIVIDE               : 38
ELSE                 : 33
END                  : 3 18 19
EQ                   : 43
FLOAT                : 56
FUNC                 : 18 19
GE                   : 42
GT                   : 40
ID                   : 59 60
IF                   : 32 33
INTEGER              : 55
LAND                 : 45
LBRACKET             : 17 24 60
LE                   : 41
LNOT                 : 47
LOR                  : 46
LPAREN               : 18 19 26 27 30 31 48 51
LT                   : 39
MINUS                : 29 36
NE                   : 44
PLUS                 : 28 35
PRINT                : 26
RBRACKET             : 17 24 60
READ                 : 27
RPAREN               : 18 19 26 27 30 31 48 51
SEMI                 : 16 17 25 26 27
STRING               : 57
THEN                 : 32 33
TIMES                : 37
TYPENAME             : 58
WHILE                : 34
error                : 

Nonterminals, with rules where they appear

assign               : 7
cond                 : 32 33 34 45 45 46 46 47 48
empty                : 22 54
expression           : 25 26 28 29 30 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 52 53 60
exprlist             : 31 52
function             : 1 2
id                   : 16 17 18 19 23 24 25 27 31 49 51
if                   : 9
if_else              : 10
literal              : 17 24 50
local                : 14 15
locals               : 14 18
parameters           : 18 19 20
parm_declaration     : 20 21
print                : 8
program              : 1 0
read                 : 13
st                   : 32 33 33 34
statement            : 4 5 6
statements           : 3 6 18 19
typename             : 16 17 23 24 51
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program function
    (2) program -> . function
    (18) function -> . FUNC id LPAREN parameters RPAREN locals BEGIN statements END
    (19) function -> . FUNC id LPAREN parameters RPAREN BEGIN statements END

    FUNC            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 3

state 1

    (2) program -> function .

    FUNC            reduce using rule 2 (program -> function .)
    $end            reduce using rule 2 (program -> function .)


state 2

    (18) function -> FUNC . id LPAREN parameters RPAREN locals BEGIN statements END
    (19) function -> FUNC . id LPAREN parameters RPAREN BEGIN statements END
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 5

state 3

    (0) S' -> program .
    (1) program -> program . function
    (18) function -> . FUNC id LPAREN parameters RPAREN locals BEGIN statements END
    (19) function -> . FUNC id LPAREN parameters RPAREN BEGIN statements END

    FUNC            shift and go to state 2

    function                       shift and go to state 6

state 4

    (59) id -> ID .
    (60) id -> ID . LBRACKET expression RBRACKET

    LPAREN          reduce using rule 59 (id -> ID .)
    LT              reduce using rule 59 (id -> ID .)
    GT              reduce using rule 59 (id -> ID .)
    LE              reduce using rule 59 (id -> ID .)
    GE              reduce using rule 59 (id -> ID .)
    EQ              reduce using rule 59 (id -> ID .)
    NE              reduce using rule 59 (id -> ID .)
    PLUS            reduce using rule 59 (id -> ID .)
    MINUS           reduce using rule 59 (id -> ID .)
    TIMES           reduce using rule 59 (id -> ID .)
    DIVIDE          reduce using rule 59 (id -> ID .)
    RPAREN          reduce using rule 59 (id -> ID .)
    ASSIGN          reduce using rule 59 (id -> ID .)
    RBRACKET        reduce using rule 59 (id -> ID .)
    COMMA           reduce using rule 59 (id -> ID .)
    SEMI            reduce using rule 59 (id -> ID .)
    LAND            reduce using rule 59 (id -> ID .)
    LOR             reduce using rule 59 (id -> ID .)
    BEGIN           reduce using rule 59 (id -> ID .)
    BREAK           reduce using rule 59 (id -> ID .)
    PRINT           reduce using rule 59 (id -> ID .)
    IF              reduce using rule 59 (id -> ID .)
    WHILE           reduce using rule 59 (id -> ID .)
    READ            reduce using rule 59 (id -> ID .)
    ID              reduce using rule 59 (id -> ID .)
    THEN            reduce using rule 59 (id -> ID .)
    COLON           reduce using rule 59 (id -> ID .)
    LBRACKET        shift and go to state 7


state 5

    (18) function -> FUNC id . LPAREN parameters RPAREN locals BEGIN statements END
    (19) function -> FUNC id . LPAREN parameters RPAREN BEGIN statements END

    LPAREN          shift and go to state 8


state 6

    (1) program -> program function .

    FUNC            reduce using rule 1 (program -> program function .)
    $end            reduce using rule 1 (program -> program function .)


state 7

    (60) id -> ID LBRACKET . expression RBRACKET
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 18
    id                             shift and go to state 16

state 8

    (18) function -> FUNC id LPAREN . parameters RPAREN locals BEGIN statements END
    (19) function -> FUNC id LPAREN . parameters RPAREN BEGIN statements END
    (20) parameters -> . parameters COMMA parm_declaration
    (21) parameters -> . parm_declaration
    (22) parameters -> . empty
    (23) parm_declaration -> . id COLON typename
    (24) parm_declaration -> . id COLON typename LBRACKET literal RBRACKET
    (61) empty -> .
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    RPAREN          reduce using rule 61 (empty -> .)
    COMMA           reduce using rule 61 (empty -> .)
    ID              shift and go to state 4

    parm_declaration               shift and go to state 20
    parameters                     shift and go to state 21
    id                             shift and go to state 23
    empty                          shift and go to state 22

state 9

    (58) typename -> TYPENAME .

    LPAREN          reduce using rule 58 (typename -> TYPENAME .)
    SEMI            reduce using rule 58 (typename -> TYPENAME .)
    LBRACKET        reduce using rule 58 (typename -> TYPENAME .)
    RPAREN          reduce using rule 58 (typename -> TYPENAME .)
    COMMA           reduce using rule 58 (typename -> TYPENAME .)


state 10

    (56) literal -> FLOAT .

    RPAREN          reduce using rule 56 (literal -> FLOAT .)
    PLUS            reduce using rule 56 (literal -> FLOAT .)
    MINUS           reduce using rule 56 (literal -> FLOAT .)
    TIMES           reduce using rule 56 (literal -> FLOAT .)
    DIVIDE          reduce using rule 56 (literal -> FLOAT .)
    RBRACKET        reduce using rule 56 (literal -> FLOAT .)
    COMMA           reduce using rule 56 (literal -> FLOAT .)
    LT              reduce using rule 56 (literal -> FLOAT .)
    GT              reduce using rule 56 (literal -> FLOAT .)
    LE              reduce using rule 56 (literal -> FLOAT .)
    GE              reduce using rule 56 (literal -> FLOAT .)
    EQ              reduce using rule 56 (literal -> FLOAT .)
    NE              reduce using rule 56 (literal -> FLOAT .)
    SEMI            reduce using rule 56 (literal -> FLOAT .)
    LAND            reduce using rule 56 (literal -> FLOAT .)
    LOR             reduce using rule 56 (literal -> FLOAT .)
    BEGIN           reduce using rule 56 (literal -> FLOAT .)
    BREAK           reduce using rule 56 (literal -> FLOAT .)
    PRINT           reduce using rule 56 (literal -> FLOAT .)
    IF              reduce using rule 56 (literal -> FLOAT .)
    WHILE           reduce using rule 56 (literal -> FLOAT .)
    READ            reduce using rule 56 (literal -> FLOAT .)
    ID              reduce using rule 56 (literal -> FLOAT .)
    THEN            reduce using rule 56 (literal -> FLOAT .)


state 11

    (29) expression -> MINUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 24
    id                             shift and go to state 16

state 12

    (51) expression -> typename . LPAREN id RPAREN

    LPAREN          shift and go to state 25


state 13

    (50) expression -> literal .

    SEMI            reduce using rule 50 (expression -> literal .)
    PLUS            reduce using rule 50 (expression -> literal .)
    MINUS           reduce using rule 50 (expression -> literal .)
    TIMES           reduce using rule 50 (expression -> literal .)
    DIVIDE          reduce using rule 50 (expression -> literal .)
    RBRACKET        reduce using rule 50 (expression -> literal .)
    RPAREN          reduce using rule 50 (expression -> literal .)
    COMMA           reduce using rule 50 (expression -> literal .)
    LT              reduce using rule 50 (expression -> literal .)
    GT              reduce using rule 50 (expression -> literal .)
    LE              reduce using rule 50 (expression -> literal .)
    GE              reduce using rule 50 (expression -> literal .)
    EQ              reduce using rule 50 (expression -> literal .)
    NE              reduce using rule 50 (expression -> literal .)
    LAND            reduce using rule 50 (expression -> literal .)
    LOR             reduce using rule 50 (expression -> literal .)
    BEGIN           reduce using rule 50 (expression -> literal .)
    BREAK           reduce using rule 50 (expression -> literal .)
    PRINT           reduce using rule 50 (expression -> literal .)
    IF              reduce using rule 50 (expression -> literal .)
    WHILE           reduce using rule 50 (expression -> literal .)
    READ            reduce using rule 50 (expression -> literal .)
    ID              reduce using rule 50 (expression -> literal .)
    THEN            reduce using rule 50 (expression -> literal .)


state 14

    (28) expression -> PLUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 26
    id                             shift and go to state 16

state 15

    (30) expression -> LPAREN . expression RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 27
    id                             shift and go to state 16

state 16

    (31) expression -> id . LPAREN exprlist RPAREN
    (49) expression -> id .

    LPAREN          shift and go to state 28
    SEMI            reduce using rule 49 (expression -> id .)
    PLUS            reduce using rule 49 (expression -> id .)
    MINUS           reduce using rule 49 (expression -> id .)
    TIMES           reduce using rule 49 (expression -> id .)
    DIVIDE          reduce using rule 49 (expression -> id .)
    RBRACKET        reduce using rule 49 (expression -> id .)
    RPAREN          reduce using rule 49 (expression -> id .)
    COMMA           reduce using rule 49 (expression -> id .)
    LT              reduce using rule 49 (expression -> id .)
    GT              reduce using rule 49 (expression -> id .)
    LE              reduce using rule 49 (expression -> id .)
    GE              reduce using rule 49 (expression -> id .)
    EQ              reduce using rule 49 (expression -> id .)
    NE              reduce using rule 49 (expression -> id .)
    LAND            reduce using rule 49 (expression -> id .)
    LOR             reduce using rule 49 (expression -> id .)
    BEGIN           reduce using rule 49 (expression -> id .)
    BREAK           reduce using rule 49 (expression -> id .)
    PRINT           reduce using rule 49 (expression -> id .)
    IF              reduce using rule 49 (expression -> id .)
    WHILE           reduce using rule 49 (expression -> id .)
    READ            reduce using rule 49 (expression -> id .)
    ID              reduce using rule 49 (expression -> id .)
    THEN            reduce using rule 49 (expression -> id .)


state 17

    (55) literal -> INTEGER .

    RPAREN          reduce using rule 55 (literal -> INTEGER .)
    PLUS            reduce using rule 55 (literal -> INTEGER .)
    MINUS           reduce using rule 55 (literal -> INTEGER .)
    TIMES           reduce using rule 55 (literal -> INTEGER .)
    DIVIDE          reduce using rule 55 (literal -> INTEGER .)
    RBRACKET        reduce using rule 55 (literal -> INTEGER .)
    COMMA           reduce using rule 55 (literal -> INTEGER .)
    LT              reduce using rule 55 (literal -> INTEGER .)
    GT              reduce using rule 55 (literal -> INTEGER .)
    LE              reduce using rule 55 (literal -> INTEGER .)
    GE              reduce using rule 55 (literal -> INTEGER .)
    EQ              reduce using rule 55 (literal -> INTEGER .)
    NE              reduce using rule 55 (literal -> INTEGER .)
    SEMI            reduce using rule 55 (literal -> INTEGER .)
    LAND            reduce using rule 55 (literal -> INTEGER .)
    LOR             reduce using rule 55 (literal -> INTEGER .)
    BEGIN           reduce using rule 55 (literal -> INTEGER .)
    BREAK           reduce using rule 55 (literal -> INTEGER .)
    PRINT           reduce using rule 55 (literal -> INTEGER .)
    IF              reduce using rule 55 (literal -> INTEGER .)
    WHILE           reduce using rule 55 (literal -> INTEGER .)
    READ            reduce using rule 55 (literal -> INTEGER .)
    ID              reduce using rule 55 (literal -> INTEGER .)
    THEN            reduce using rule 55 (literal -> INTEGER .)


state 18

    (60) id -> ID LBRACKET expression . RBRACKET
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 32
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 19

    (57) literal -> STRING .

    RPAREN          reduce using rule 57 (literal -> STRING .)
    PLUS            reduce using rule 57 (literal -> STRING .)
    MINUS           reduce using rule 57 (literal -> STRING .)
    TIMES           reduce using rule 57 (literal -> STRING .)
    DIVIDE          reduce using rule 57 (literal -> STRING .)
    RBRACKET        reduce using rule 57 (literal -> STRING .)
    COMMA           reduce using rule 57 (literal -> STRING .)
    LT              reduce using rule 57 (literal -> STRING .)
    GT              reduce using rule 57 (literal -> STRING .)
    LE              reduce using rule 57 (literal -> STRING .)
    GE              reduce using rule 57 (literal -> STRING .)
    EQ              reduce using rule 57 (literal -> STRING .)
    NE              reduce using rule 57 (literal -> STRING .)
    SEMI            reduce using rule 57 (literal -> STRING .)
    LAND            reduce using rule 57 (literal -> STRING .)
    LOR             reduce using rule 57 (literal -> STRING .)
    BEGIN           reduce using rule 57 (literal -> STRING .)
    BREAK           reduce using rule 57 (literal -> STRING .)
    PRINT           reduce using rule 57 (literal -> STRING .)
    IF              reduce using rule 57 (literal -> STRING .)
    WHILE           reduce using rule 57 (literal -> STRING .)
    READ            reduce using rule 57 (literal -> STRING .)
    ID              reduce using rule 57 (literal -> STRING .)
    THEN            reduce using rule 57 (literal -> STRING .)


state 20

    (21) parameters -> parm_declaration .

    RPAREN          reduce using rule 21 (parameters -> parm_declaration .)
    COMMA           reduce using rule 21 (parameters -> parm_declaration .)


state 21

    (18) function -> FUNC id LPAREN parameters . RPAREN locals BEGIN statements END
    (19) function -> FUNC id LPAREN parameters . RPAREN BEGIN statements END
    (20) parameters -> parameters . COMMA parm_declaration

    RPAREN          shift and go to state 34
    COMMA           shift and go to state 35


state 22

    (22) parameters -> empty .

    RPAREN          reduce using rule 22 (parameters -> empty .)
    COMMA           reduce using rule 22 (parameters -> empty .)


state 23

    (23) parm_declaration -> id . COLON typename
    (24) parm_declaration -> id . COLON typename LBRACKET literal RBRACKET

    COLON           shift and go to state 36


state 24

    (29) expression -> MINUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 29 (expression -> MINUS expression .)
    PLUS            reduce using rule 29 (expression -> MINUS expression .)
    MINUS           reduce using rule 29 (expression -> MINUS expression .)
    TIMES           reduce using rule 29 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 29 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 29 (expression -> MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> MINUS expression .)
    COMMA           reduce using rule 29 (expression -> MINUS expression .)
    LT              reduce using rule 29 (expression -> MINUS expression .)
    GT              reduce using rule 29 (expression -> MINUS expression .)
    LE              reduce using rule 29 (expression -> MINUS expression .)
    GE              reduce using rule 29 (expression -> MINUS expression .)
    EQ              reduce using rule 29 (expression -> MINUS expression .)
    NE              reduce using rule 29 (expression -> MINUS expression .)
    LAND            reduce using rule 29 (expression -> MINUS expression .)
    LOR             reduce using rule 29 (expression -> MINUS expression .)
    BEGIN           reduce using rule 29 (expression -> MINUS expression .)
    BREAK           reduce using rule 29 (expression -> MINUS expression .)
    PRINT           reduce using rule 29 (expression -> MINUS expression .)
    IF              reduce using rule 29 (expression -> MINUS expression .)
    WHILE           reduce using rule 29 (expression -> MINUS expression .)
    READ            reduce using rule 29 (expression -> MINUS expression .)
    ID              reduce using rule 29 (expression -> MINUS expression .)
    THEN            reduce using rule 29 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 25

    (51) expression -> typename LPAREN . id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 37

state 26

    (28) expression -> PLUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 28 (expression -> PLUS expression .)
    PLUS            reduce using rule 28 (expression -> PLUS expression .)
    MINUS           reduce using rule 28 (expression -> PLUS expression .)
    TIMES           reduce using rule 28 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 28 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 28 (expression -> PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> PLUS expression .)
    COMMA           reduce using rule 28 (expression -> PLUS expression .)
    LT              reduce using rule 28 (expression -> PLUS expression .)
    GT              reduce using rule 28 (expression -> PLUS expression .)
    LE              reduce using rule 28 (expression -> PLUS expression .)
    GE              reduce using rule 28 (expression -> PLUS expression .)
    EQ              reduce using rule 28 (expression -> PLUS expression .)
    NE              reduce using rule 28 (expression -> PLUS expression .)
    LAND            reduce using rule 28 (expression -> PLUS expression .)
    LOR             reduce using rule 28 (expression -> PLUS expression .)
    BEGIN           reduce using rule 28 (expression -> PLUS expression .)
    BREAK           reduce using rule 28 (expression -> PLUS expression .)
    PRINT           reduce using rule 28 (expression -> PLUS expression .)
    IF              reduce using rule 28 (expression -> PLUS expression .)
    WHILE           reduce using rule 28 (expression -> PLUS expression .)
    READ            reduce using rule 28 (expression -> PLUS expression .)
    ID              reduce using rule 28 (expression -> PLUS expression .)
    THEN            reduce using rule 28 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 27

    (30) expression -> LPAREN expression . RPAREN
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 28

    (31) expression -> id LPAREN . exprlist RPAREN
    (52) exprlist -> . exprlist COMMA expression
    (53) exprlist -> . expression
    (54) exprlist -> . empty
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (61) empty -> .
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    RPAREN          reduce using rule 61 (empty -> .)
    COMMA           reduce using rule 61 (empty -> .)
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    exprlist                       shift and go to state 39
    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 40
    id                             shift and go to state 16
    empty                          shift and go to state 41

state 29

    (38) expression -> expression DIVIDE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 42
    id                             shift and go to state 16

state 30

    (36) expression -> expression MINUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 43
    id                             shift and go to state 16

state 31

    (35) expression -> expression PLUS . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 44
    id                             shift and go to state 16

state 32

    (60) id -> ID LBRACKET expression RBRACKET .

    LPAREN          reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    LAND            reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    LOR             reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    READ            reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    THEN            reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)
    COLON           reduce using rule 60 (id -> ID LBRACKET expression RBRACKET .)


state 33

    (37) expression -> expression TIMES . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 45
    id                             shift and go to state 16

state 34

    (18) function -> FUNC id LPAREN parameters RPAREN . locals BEGIN statements END
    (19) function -> FUNC id LPAREN parameters RPAREN . BEGIN statements END
    (14) locals -> . locals local
    (15) locals -> . local
    (16) local -> . id COLON typename SEMI
    (17) local -> . id COLON typename LBRACKET literal RBRACKET SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 46
    ID              shift and go to state 4

    local                          shift and go to state 47
    id                             shift and go to state 48
    locals                         shift and go to state 49

state 35

    (20) parameters -> parameters COMMA . parm_declaration
    (23) parm_declaration -> . id COLON typename
    (24) parm_declaration -> . id COLON typename LBRACKET literal RBRACKET
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    parm_declaration               shift and go to state 50
    id                             shift and go to state 23

state 36

    (23) parm_declaration -> id COLON . typename
    (24) parm_declaration -> id COLON . typename LBRACKET literal RBRACKET
    (58) typename -> . TYPENAME

    TYPENAME        shift and go to state 9

    typename                       shift and go to state 51

state 37

    (51) expression -> typename LPAREN id . RPAREN

    RPAREN          shift and go to state 52


state 38

    (30) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 30 (expression -> LPAREN expression RPAREN .)


state 39

    (31) expression -> id LPAREN exprlist . RPAREN
    (52) exprlist -> exprlist . COMMA expression

    RPAREN          shift and go to state 53
    COMMA           shift and go to state 54


state 40

    (53) exprlist -> expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 53 (exprlist -> expression .)
    COMMA           reduce using rule 53 (exprlist -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 41

    (54) exprlist -> empty .

    RPAREN          reduce using rule 54 (exprlist -> empty .)
    COMMA           reduce using rule 54 (exprlist -> empty .)


state 42

    (38) expression -> expression DIVIDE expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 38 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 38 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 38 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 38 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 38 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 38 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 38 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 38 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 38 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 38 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 38 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 38 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 38 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 38 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 38 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 38 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 38 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 38 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 38 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 38 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 38 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 38 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 38 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 38 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 43

    (36) expression -> expression MINUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 36 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 36 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 36 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 36 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 36 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 36 (expression -> expression MINUS expression .)
    LT              reduce using rule 36 (expression -> expression MINUS expression .)
    GT              reduce using rule 36 (expression -> expression MINUS expression .)
    LE              reduce using rule 36 (expression -> expression MINUS expression .)
    GE              reduce using rule 36 (expression -> expression MINUS expression .)
    EQ              reduce using rule 36 (expression -> expression MINUS expression .)
    NE              reduce using rule 36 (expression -> expression MINUS expression .)
    LAND            reduce using rule 36 (expression -> expression MINUS expression .)
    LOR             reduce using rule 36 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 36 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 36 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 36 (expression -> expression MINUS expression .)
    IF              reduce using rule 36 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 36 (expression -> expression MINUS expression .)
    READ            reduce using rule 36 (expression -> expression MINUS expression .)
    ID              reduce using rule 36 (expression -> expression MINUS expression .)
    THEN            reduce using rule 36 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 36 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]


state 44

    (35) expression -> expression PLUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 35 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 35 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 35 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 35 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 35 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 35 (expression -> expression PLUS expression .)
    LT              reduce using rule 35 (expression -> expression PLUS expression .)
    GT              reduce using rule 35 (expression -> expression PLUS expression .)
    LE              reduce using rule 35 (expression -> expression PLUS expression .)
    GE              reduce using rule 35 (expression -> expression PLUS expression .)
    EQ              reduce using rule 35 (expression -> expression PLUS expression .)
    NE              reduce using rule 35 (expression -> expression PLUS expression .)
    LAND            reduce using rule 35 (expression -> expression PLUS expression .)
    LOR             reduce using rule 35 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 35 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 35 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 35 (expression -> expression PLUS expression .)
    IF              reduce using rule 35 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 35 (expression -> expression PLUS expression .)
    READ            reduce using rule 35 (expression -> expression PLUS expression .)
    ID              reduce using rule 35 (expression -> expression PLUS expression .)
    THEN            reduce using rule 35 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 35 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]


state 45

    (37) expression -> expression TIMES expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 37 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 37 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 37 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 37 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 37 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 37 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 37 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 37 (expression -> expression TIMES expression .)
    LT              reduce using rule 37 (expression -> expression TIMES expression .)
    GT              reduce using rule 37 (expression -> expression TIMES expression .)
    LE              reduce using rule 37 (expression -> expression TIMES expression .)
    GE              reduce using rule 37 (expression -> expression TIMES expression .)
    EQ              reduce using rule 37 (expression -> expression TIMES expression .)
    NE              reduce using rule 37 (expression -> expression TIMES expression .)
    LAND            reduce using rule 37 (expression -> expression TIMES expression .)
    LOR             reduce using rule 37 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 37 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 37 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 37 (expression -> expression TIMES expression .)
    IF              reduce using rule 37 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 37 (expression -> expression TIMES expression .)
    READ            reduce using rule 37 (expression -> expression TIMES expression .)
    ID              reduce using rule 37 (expression -> expression TIMES expression .)
    THEN            reduce using rule 37 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 46

    (19) function -> FUNC id LPAREN parameters RPAREN BEGIN . statements END
    (5) statements -> . statement
    (6) statements -> . statements statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    statements                     shift and go to state 55
    read                           shift and go to state 64
    assign                         shift and go to state 68
    while                          shift and go to state 67
    statement                      shift and go to state 62
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    id                             shift and go to state 60
    if                             shift and go to state 61

state 47

    (15) locals -> local .

    BEGIN           reduce using rule 15 (locals -> local .)
    ID              reduce using rule 15 (locals -> local .)


state 48

    (16) local -> id . COLON typename SEMI
    (17) local -> id . COLON typename LBRACKET literal RBRACKET SEMI

    COLON           shift and go to state 69


state 49

    (18) function -> FUNC id LPAREN parameters RPAREN locals . BEGIN statements END
    (14) locals -> locals . local
    (16) local -> . id COLON typename SEMI
    (17) local -> . id COLON typename LBRACKET literal RBRACKET SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 70
    ID              shift and go to state 4

    local                          shift and go to state 71
    id                             shift and go to state 48

state 50

    (20) parameters -> parameters COMMA parm_declaration .

    RPAREN          reduce using rule 20 (parameters -> parameters COMMA parm_declaration .)
    COMMA           reduce using rule 20 (parameters -> parameters COMMA parm_declaration .)


state 51

    (23) parm_declaration -> id COLON typename .
    (24) parm_declaration -> id COLON typename . LBRACKET literal RBRACKET

    RPAREN          reduce using rule 23 (parm_declaration -> id COLON typename .)
    COMMA           reduce using rule 23 (parm_declaration -> id COLON typename .)
    LBRACKET        shift and go to state 72


state 52

    (51) expression -> typename LPAREN id RPAREN .

    SEMI            reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    PLUS            reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    MINUS           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    TIMES           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    RBRACKET        reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    RPAREN          reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    COMMA           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    LT              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    GT              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    LE              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    GE              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    EQ              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    NE              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    LAND            reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    LOR             reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    BEGIN           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    BREAK           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    PRINT           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    IF              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    WHILE           reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    READ            reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    ID              reduce using rule 51 (expression -> typename LPAREN id RPAREN .)
    THEN            reduce using rule 51 (expression -> typename LPAREN id RPAREN .)


state 53

    (31) expression -> id LPAREN exprlist RPAREN .

    SEMI            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    PLUS            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    MINUS           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    TIMES           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    RBRACKET        reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    RPAREN          reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    COMMA           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LT              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    GT              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    GE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    EQ              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    NE              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LAND            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    LOR             reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    BEGIN           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    BREAK           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    PRINT           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    IF              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    WHILE           reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    READ            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    ID              reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)
    THEN            reduce using rule 31 (expression -> id LPAREN exprlist RPAREN .)


state 54

    (52) exprlist -> exprlist COMMA . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 73
    id                             shift and go to state 16

state 55

    (19) function -> FUNC id LPAREN parameters RPAREN BEGIN statements . END
    (6) statements -> statements . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    END             shift and go to state 75
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    read                           shift and go to state 64
    assign                         shift and go to state 68
    while                          shift and go to state 67
    statement                      shift and go to state 74
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    id                             shift and go to state 60
    if                             shift and go to state 61

state 56

    (27) read -> READ . LPAREN id RPAREN SEMI

    LPAREN          shift and go to state 76


state 57

    (34) while -> WHILE . cond st
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 78
    expression                     shift and go to state 80
    id                             shift and go to state 16

state 58

    (26) print -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 81


state 59

    (10) statement -> if_else .

    END             reduce using rule 10 (statement -> if_else .)
    BREAK           reduce using rule 10 (statement -> if_else .)
    PRINT           reduce using rule 10 (statement -> if_else .)
    IF              reduce using rule 10 (statement -> if_else .)
    WHILE           reduce using rule 10 (statement -> if_else .)
    READ            reduce using rule 10 (statement -> if_else .)
    ID              reduce using rule 10 (statement -> if_else .)
    ELSE            reduce using rule 10 (statement -> if_else .)


state 60

    (25) assign -> id . ASSIGN expression SEMI

    ASSIGN          shift and go to state 82


state 61

    (9) statement -> if .

    END             reduce using rule 9 (statement -> if .)
    BREAK           reduce using rule 9 (statement -> if .)
    PRINT           reduce using rule 9 (statement -> if .)
    IF              reduce using rule 9 (statement -> if .)
    WHILE           reduce using rule 9 (statement -> if .)
    READ            reduce using rule 9 (statement -> if .)
    ID              reduce using rule 9 (statement -> if .)
    ELSE            reduce using rule 9 (statement -> if .)


state 62

    (5) statements -> statement .

    END             reduce using rule 5 (statements -> statement .)
    BREAK           reduce using rule 5 (statements -> statement .)
    PRINT           reduce using rule 5 (statements -> statement .)
    IF              reduce using rule 5 (statements -> statement .)
    WHILE           reduce using rule 5 (statements -> statement .)
    READ            reduce using rule 5 (statements -> statement .)
    ID              reduce using rule 5 (statements -> statement .)


state 63

    (8) statement -> print .

    END             reduce using rule 8 (statement -> print .)
    BREAK           reduce using rule 8 (statement -> print .)
    PRINT           reduce using rule 8 (statement -> print .)
    IF              reduce using rule 8 (statement -> print .)
    WHILE           reduce using rule 8 (statement -> print .)
    READ            reduce using rule 8 (statement -> print .)
    ID              reduce using rule 8 (statement -> print .)
    ELSE            reduce using rule 8 (statement -> print .)


state 64

    (13) statement -> read .

    END             reduce using rule 13 (statement -> read .)
    BREAK           reduce using rule 13 (statement -> read .)
    PRINT           reduce using rule 13 (statement -> read .)
    IF              reduce using rule 13 (statement -> read .)
    WHILE           reduce using rule 13 (statement -> read .)
    READ            reduce using rule 13 (statement -> read .)
    ID              reduce using rule 13 (statement -> read .)
    ELSE            reduce using rule 13 (statement -> read .)


state 65

    (32) if -> IF . cond THEN st
    (33) if_else -> IF . cond THEN st ELSE st
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 83
    expression                     shift and go to state 80
    id                             shift and go to state 16

state 66

    (12) statement -> BREAK .

    END             reduce using rule 12 (statement -> BREAK .)
    BREAK           reduce using rule 12 (statement -> BREAK .)
    PRINT           reduce using rule 12 (statement -> BREAK .)
    IF              reduce using rule 12 (statement -> BREAK .)
    WHILE           reduce using rule 12 (statement -> BREAK .)
    READ            reduce using rule 12 (statement -> BREAK .)
    ID              reduce using rule 12 (statement -> BREAK .)
    ELSE            reduce using rule 12 (statement -> BREAK .)


state 67

    (11) statement -> while .

    END             reduce using rule 11 (statement -> while .)
    BREAK           reduce using rule 11 (statement -> while .)
    PRINT           reduce using rule 11 (statement -> while .)
    IF              reduce using rule 11 (statement -> while .)
    WHILE           reduce using rule 11 (statement -> while .)
    READ            reduce using rule 11 (statement -> while .)
    ID              reduce using rule 11 (statement -> while .)
    ELSE            reduce using rule 11 (statement -> while .)


state 68

    (7) statement -> assign .

    END             reduce using rule 7 (statement -> assign .)
    BREAK           reduce using rule 7 (statement -> assign .)
    PRINT           reduce using rule 7 (statement -> assign .)
    IF              reduce using rule 7 (statement -> assign .)
    WHILE           reduce using rule 7 (statement -> assign .)
    READ            reduce using rule 7 (statement -> assign .)
    ID              reduce using rule 7 (statement -> assign .)
    ELSE            reduce using rule 7 (statement -> assign .)


state 69

    (16) local -> id COLON . typename SEMI
    (17) local -> id COLON . typename LBRACKET literal RBRACKET SEMI
    (58) typename -> . TYPENAME

    TYPENAME        shift and go to state 9

    typename                       shift and go to state 84

state 70

    (18) function -> FUNC id LPAREN parameters RPAREN locals BEGIN . statements END
    (5) statements -> . statement
    (6) statements -> . statements statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    statements                     shift and go to state 85
    read                           shift and go to state 64
    assign                         shift and go to state 68
    while                          shift and go to state 67
    statement                      shift and go to state 62
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    id                             shift and go to state 60
    if                             shift and go to state 61

state 71

    (14) locals -> locals local .

    BEGIN           reduce using rule 14 (locals -> locals local .)
    ID              reduce using rule 14 (locals -> locals local .)


state 72

    (24) parm_declaration -> id COLON typename LBRACKET . literal RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING

    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19

    literal                        shift and go to state 86

state 73

    (52) exprlist -> exprlist COMMA expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 52 (exprlist -> exprlist COMMA expression .)
    COMMA           reduce using rule 52 (exprlist -> exprlist COMMA expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 74

    (6) statements -> statements statement .

    END             reduce using rule 6 (statements -> statements statement .)
    BREAK           reduce using rule 6 (statements -> statements statement .)
    PRINT           reduce using rule 6 (statements -> statements statement .)
    IF              reduce using rule 6 (statements -> statements statement .)
    WHILE           reduce using rule 6 (statements -> statements statement .)
    READ            reduce using rule 6 (statements -> statements statement .)
    ID              reduce using rule 6 (statements -> statements statement .)


state 75

    (19) function -> FUNC id LPAREN parameters RPAREN BEGIN statements END .

    FUNC            reduce using rule 19 (function -> FUNC id LPAREN parameters RPAREN BEGIN statements END .)
    $end            reduce using rule 19 (function -> FUNC id LPAREN parameters RPAREN BEGIN statements END .)


state 76

    (27) read -> READ LPAREN . id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 4

    id                             shift and go to state 87

state 77

    (47) cond -> LNOT . cond
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 88
    expression                     shift and go to state 80
    id                             shift and go to state 16

state 78

    (34) while -> WHILE cond . st
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond
    (3) st -> . BEGIN statements END
    (4) st -> . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    LAND            shift and go to state 91
    LOR             shift and go to state 89
    BEGIN           shift and go to state 90
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    read                           shift and go to state 64
    id                             shift and go to state 60
    st                             shift and go to state 93
    while                          shift and go to state 67
    statement                      shift and go to state 92
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    assign                         shift and go to state 68
    if                             shift and go to state 61

state 79

    (48) cond -> LPAREN . cond RPAREN
    (30) expression -> LPAREN . expression RPAREN
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 94
    expression                     shift and go to state 95
    id                             shift and go to state 16

state 80

    (39) cond -> expression . LT expression
    (40) cond -> expression . GT expression
    (41) cond -> expression . LE expression
    (42) cond -> expression . GE expression
    (43) cond -> expression . EQ expression
    (44) cond -> expression . NE expression
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LT              shift and go to state 98
    GT              shift and go to state 96
    LE              shift and go to state 101
    GE              shift and go to state 100
    EQ              shift and go to state 97
    NE              shift and go to state 99
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 81

    (26) print -> PRINT LPAREN . expression RPAREN SEMI
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 102
    id                             shift and go to state 16

state 82

    (25) assign -> id ASSIGN . expression SEMI
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 103
    id                             shift and go to state 16

state 83

    (32) if -> IF cond . THEN st
    (33) if_else -> IF cond . THEN st ELSE st
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond

    THEN            shift and go to state 104
    LAND            shift and go to state 91
    LOR             shift and go to state 89


state 84

    (16) local -> id COLON typename . SEMI
    (17) local -> id COLON typename . LBRACKET literal RBRACKET SEMI

    SEMI            shift and go to state 105
    LBRACKET        shift and go to state 106


state 85

    (18) function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements . END
    (6) statements -> statements . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    END             shift and go to state 107
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    read                           shift and go to state 64
    assign                         shift and go to state 68
    while                          shift and go to state 67
    statement                      shift and go to state 74
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    id                             shift and go to state 60
    if                             shift and go to state 61

state 86

    (24) parm_declaration -> id COLON typename LBRACKET literal . RBRACKET

    RBRACKET        shift and go to state 108


state 87

    (27) read -> READ LPAREN id . RPAREN SEMI

    RPAREN          shift and go to state 109


state 88

    (47) cond -> LNOT cond .
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond

    LAND            reduce using rule 47 (cond -> LNOT cond .)
    LOR             reduce using rule 47 (cond -> LNOT cond .)
    BEGIN           reduce using rule 47 (cond -> LNOT cond .)
    BREAK           reduce using rule 47 (cond -> LNOT cond .)
    PRINT           reduce using rule 47 (cond -> LNOT cond .)
    IF              reduce using rule 47 (cond -> LNOT cond .)
    WHILE           reduce using rule 47 (cond -> LNOT cond .)
    READ            reduce using rule 47 (cond -> LNOT cond .)
    ID              reduce using rule 47 (cond -> LNOT cond .)
    THEN            reduce using rule 47 (cond -> LNOT cond .)
    RPAREN          reduce using rule 47 (cond -> LNOT cond .)

  ! LAND            [ shift and go to state 91 ]
  ! LOR             [ shift and go to state 89 ]


state 89

    (46) cond -> cond LOR . cond
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 110
    expression                     shift and go to state 80
    id                             shift and go to state 16

state 90

    (3) st -> BEGIN . statements END
    (5) statements -> . statement
    (6) statements -> . statements statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    if_else                        shift and go to state 59
    read                           shift and go to state 64
    id                             shift and go to state 60
    while                          shift and go to state 67
    statement                      shift and go to state 62
    print                          shift and go to state 63
    statements                     shift and go to state 111
    assign                         shift and go to state 68
    if                             shift and go to state 61

state 91

    (45) cond -> cond LAND . cond
    (39) cond -> . expression LT expression
    (40) cond -> . expression GT expression
    (41) cond -> . expression LE expression
    (42) cond -> . expression GE expression
    (43) cond -> . expression EQ expression
    (44) cond -> . expression NE expression
    (45) cond -> . cond LAND cond
    (46) cond -> . cond LOR cond
    (47) cond -> . LNOT cond
    (48) cond -> . LPAREN cond RPAREN
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    LNOT            shift and go to state 77
    LPAREN          shift and go to state 79
    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    cond                           shift and go to state 112
    expression                     shift and go to state 80
    id                             shift and go to state 16

state 92

    (4) st -> statement .

    END             reduce using rule 4 (st -> statement .)
    BREAK           reduce using rule 4 (st -> statement .)
    PRINT           reduce using rule 4 (st -> statement .)
    IF              reduce using rule 4 (st -> statement .)
    WHILE           reduce using rule 4 (st -> statement .)
    READ            reduce using rule 4 (st -> statement .)
    ID              reduce using rule 4 (st -> statement .)
    ELSE            reduce using rule 4 (st -> statement .)


state 93

    (34) while -> WHILE cond st .

    END             reduce using rule 34 (while -> WHILE cond st .)
    BREAK           reduce using rule 34 (while -> WHILE cond st .)
    PRINT           reduce using rule 34 (while -> WHILE cond st .)
    IF              reduce using rule 34 (while -> WHILE cond st .)
    WHILE           reduce using rule 34 (while -> WHILE cond st .)
    READ            reduce using rule 34 (while -> WHILE cond st .)
    ID              reduce using rule 34 (while -> WHILE cond st .)
    ELSE            reduce using rule 34 (while -> WHILE cond st .)


state 94

    (48) cond -> LPAREN cond . RPAREN
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond

    RPAREN          shift and go to state 113
    LAND            shift and go to state 91
    LOR             shift and go to state 89


state 95

    (30) expression -> LPAREN expression . RPAREN
    (39) cond -> expression . LT expression
    (40) cond -> expression . GT expression
    (41) cond -> expression . LE expression
    (42) cond -> expression . GE expression
    (43) cond -> expression . EQ expression
    (44) cond -> expression . NE expression
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 38
    LT              shift and go to state 98
    GT              shift and go to state 96
    LE              shift and go to state 101
    GE              shift and go to state 100
    EQ              shift and go to state 97
    NE              shift and go to state 99
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 96

    (40) cond -> expression GT . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 114
    id                             shift and go to state 16

state 97

    (43) cond -> expression EQ . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 115
    id                             shift and go to state 16

state 98

    (39) cond -> expression LT . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 116
    id                             shift and go to state 16

state 99

    (44) cond -> expression NE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 117
    id                             shift and go to state 16

state 100

    (42) cond -> expression GE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 118
    id                             shift and go to state 16

state 101

    (41) cond -> expression LE . expression
    (28) expression -> . PLUS expression
    (29) expression -> . MINUS expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . id LPAREN exprlist RPAREN
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (49) expression -> . id
    (50) expression -> . literal
    (51) expression -> . typename LPAREN id RPAREN
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING
    (58) typename -> . TYPENAME

    PLUS            shift and go to state 14
    MINUS           shift and go to state 11
    LPAREN          shift and go to state 15
    ID              shift and go to state 4
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19
    TYPENAME        shift and go to state 9

    typename                       shift and go to state 12
    literal                        shift and go to state 13
    expression                     shift and go to state 119
    id                             shift and go to state 16

state 102

    (26) print -> PRINT LPAREN expression . RPAREN SEMI
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 120
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 103

    (25) assign -> id ASSIGN expression . SEMI
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 121
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 104

    (32) if -> IF cond THEN . st
    (33) if_else -> IF cond THEN . st ELSE st
    (3) st -> . BEGIN statements END
    (4) st -> . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 90
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    read                           shift and go to state 64
    id                             shift and go to state 60
    st                             shift and go to state 122
    while                          shift and go to state 67
    statement                      shift and go to state 92
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    assign                         shift and go to state 68
    if                             shift and go to state 61

state 105

    (16) local -> id COLON typename SEMI .

    BEGIN           reduce using rule 16 (local -> id COLON typename SEMI .)
    ID              reduce using rule 16 (local -> id COLON typename SEMI .)


state 106

    (17) local -> id COLON typename LBRACKET . literal RBRACKET SEMI
    (55) literal -> . INTEGER
    (56) literal -> . FLOAT
    (57) literal -> . STRING

    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 10
    STRING          shift and go to state 19

    literal                        shift and go to state 123

state 107

    (18) function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .

    FUNC            reduce using rule 18 (function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .)
    $end            reduce using rule 18 (function -> FUNC id LPAREN parameters RPAREN locals BEGIN statements END .)


state 108

    (24) parm_declaration -> id COLON typename LBRACKET literal RBRACKET .

    RPAREN          reduce using rule 24 (parm_declaration -> id COLON typename LBRACKET literal RBRACKET .)
    COMMA           reduce using rule 24 (parm_declaration -> id COLON typename LBRACKET literal RBRACKET .)


state 109

    (27) read -> READ LPAREN id RPAREN . SEMI

    SEMI            shift and go to state 124


state 110

    (46) cond -> cond LOR cond .
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond

    LOR             reduce using rule 46 (cond -> cond LOR cond .)
    BEGIN           reduce using rule 46 (cond -> cond LOR cond .)
    BREAK           reduce using rule 46 (cond -> cond LOR cond .)
    PRINT           reduce using rule 46 (cond -> cond LOR cond .)
    IF              reduce using rule 46 (cond -> cond LOR cond .)
    WHILE           reduce using rule 46 (cond -> cond LOR cond .)
    READ            reduce using rule 46 (cond -> cond LOR cond .)
    ID              reduce using rule 46 (cond -> cond LOR cond .)
    THEN            reduce using rule 46 (cond -> cond LOR cond .)
    RPAREN          reduce using rule 46 (cond -> cond LOR cond .)
    LAND            shift and go to state 91

  ! LAND            [ reduce using rule 46 (cond -> cond LOR cond .) ]
  ! LOR             [ shift and go to state 89 ]


state 111

    (3) st -> BEGIN statements . END
    (6) statements -> statements . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    END             shift and go to state 125
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    if_else                        shift and go to state 59
    read                           shift and go to state 64
    id                             shift and go to state 60
    while                          shift and go to state 67
    statement                      shift and go to state 74
    print                          shift and go to state 63
    assign                         shift and go to state 68
    if                             shift and go to state 61

state 112

    (45) cond -> cond LAND cond .
    (45) cond -> cond . LAND cond
    (46) cond -> cond . LOR cond

    LAND            reduce using rule 45 (cond -> cond LAND cond .)
    LOR             reduce using rule 45 (cond -> cond LAND cond .)
    BEGIN           reduce using rule 45 (cond -> cond LAND cond .)
    BREAK           reduce using rule 45 (cond -> cond LAND cond .)
    PRINT           reduce using rule 45 (cond -> cond LAND cond .)
    IF              reduce using rule 45 (cond -> cond LAND cond .)
    WHILE           reduce using rule 45 (cond -> cond LAND cond .)
    READ            reduce using rule 45 (cond -> cond LAND cond .)
    ID              reduce using rule 45 (cond -> cond LAND cond .)
    THEN            reduce using rule 45 (cond -> cond LAND cond .)
    RPAREN          reduce using rule 45 (cond -> cond LAND cond .)

  ! LAND            [ shift and go to state 91 ]
  ! LOR             [ shift and go to state 89 ]


state 113

    (48) cond -> LPAREN cond RPAREN .

    LAND            reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    LOR             reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    BEGIN           reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    BREAK           reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    PRINT           reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    IF              reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    WHILE           reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    READ            reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    ID              reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    THEN            reduce using rule 48 (cond -> LPAREN cond RPAREN .)
    RPAREN          reduce using rule 48 (cond -> LPAREN cond RPAREN .)


state 114

    (40) cond -> expression GT expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 40 (cond -> expression GT expression .)
    LOR             reduce using rule 40 (cond -> expression GT expression .)
    BEGIN           reduce using rule 40 (cond -> expression GT expression .)
    BREAK           reduce using rule 40 (cond -> expression GT expression .)
    PRINT           reduce using rule 40 (cond -> expression GT expression .)
    IF              reduce using rule 40 (cond -> expression GT expression .)
    WHILE           reduce using rule 40 (cond -> expression GT expression .)
    READ            reduce using rule 40 (cond -> expression GT expression .)
    ID              reduce using rule 40 (cond -> expression GT expression .)
    THEN            reduce using rule 40 (cond -> expression GT expression .)
    RPAREN          reduce using rule 40 (cond -> expression GT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 115

    (43) cond -> expression EQ expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 43 (cond -> expression EQ expression .)
    LOR             reduce using rule 43 (cond -> expression EQ expression .)
    BEGIN           reduce using rule 43 (cond -> expression EQ expression .)
    BREAK           reduce using rule 43 (cond -> expression EQ expression .)
    PRINT           reduce using rule 43 (cond -> expression EQ expression .)
    IF              reduce using rule 43 (cond -> expression EQ expression .)
    WHILE           reduce using rule 43 (cond -> expression EQ expression .)
    READ            reduce using rule 43 (cond -> expression EQ expression .)
    ID              reduce using rule 43 (cond -> expression EQ expression .)
    THEN            reduce using rule 43 (cond -> expression EQ expression .)
    RPAREN          reduce using rule 43 (cond -> expression EQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 116

    (39) cond -> expression LT expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 39 (cond -> expression LT expression .)
    LOR             reduce using rule 39 (cond -> expression LT expression .)
    BEGIN           reduce using rule 39 (cond -> expression LT expression .)
    BREAK           reduce using rule 39 (cond -> expression LT expression .)
    PRINT           reduce using rule 39 (cond -> expression LT expression .)
    IF              reduce using rule 39 (cond -> expression LT expression .)
    WHILE           reduce using rule 39 (cond -> expression LT expression .)
    READ            reduce using rule 39 (cond -> expression LT expression .)
    ID              reduce using rule 39 (cond -> expression LT expression .)
    THEN            reduce using rule 39 (cond -> expression LT expression .)
    RPAREN          reduce using rule 39 (cond -> expression LT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 117

    (44) cond -> expression NE expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 44 (cond -> expression NE expression .)
    LOR             reduce using rule 44 (cond -> expression NE expression .)
    BEGIN           reduce using rule 44 (cond -> expression NE expression .)
    BREAK           reduce using rule 44 (cond -> expression NE expression .)
    PRINT           reduce using rule 44 (cond -> expression NE expression .)
    IF              reduce using rule 44 (cond -> expression NE expression .)
    WHILE           reduce using rule 44 (cond -> expression NE expression .)
    READ            reduce using rule 44 (cond -> expression NE expression .)
    ID              reduce using rule 44 (cond -> expression NE expression .)
    THEN            reduce using rule 44 (cond -> expression NE expression .)
    RPAREN          reduce using rule 44 (cond -> expression NE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 118

    (42) cond -> expression GE expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 42 (cond -> expression GE expression .)
    LOR             reduce using rule 42 (cond -> expression GE expression .)
    BEGIN           reduce using rule 42 (cond -> expression GE expression .)
    BREAK           reduce using rule 42 (cond -> expression GE expression .)
    PRINT           reduce using rule 42 (cond -> expression GE expression .)
    IF              reduce using rule 42 (cond -> expression GE expression .)
    WHILE           reduce using rule 42 (cond -> expression GE expression .)
    READ            reduce using rule 42 (cond -> expression GE expression .)
    ID              reduce using rule 42 (cond -> expression GE expression .)
    THEN            reduce using rule 42 (cond -> expression GE expression .)
    RPAREN          reduce using rule 42 (cond -> expression GE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 119

    (41) cond -> expression LE expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression

    LAND            reduce using rule 41 (cond -> expression LE expression .)
    LOR             reduce using rule 41 (cond -> expression LE expression .)
    BEGIN           reduce using rule 41 (cond -> expression LE expression .)
    BREAK           reduce using rule 41 (cond -> expression LE expression .)
    PRINT           reduce using rule 41 (cond -> expression LE expression .)
    IF              reduce using rule 41 (cond -> expression LE expression .)
    WHILE           reduce using rule 41 (cond -> expression LE expression .)
    READ            reduce using rule 41 (cond -> expression LE expression .)
    ID              reduce using rule 41 (cond -> expression LE expression .)
    THEN            reduce using rule 41 (cond -> expression LE expression .)
    RPAREN          reduce using rule 41 (cond -> expression LE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 30
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 29


state 120

    (26) print -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 126


state 121

    (25) assign -> id ASSIGN expression SEMI .

    END             reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    BREAK           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    PRINT           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    IF              reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    WHILE           reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    READ            reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    ID              reduce using rule 25 (assign -> id ASSIGN expression SEMI .)
    ELSE            reduce using rule 25 (assign -> id ASSIGN expression SEMI .)


state 122

    (32) if -> IF cond THEN st .
    (33) if_else -> IF cond THEN st . ELSE st

    END             reduce using rule 32 (if -> IF cond THEN st .)
    BREAK           reduce using rule 32 (if -> IF cond THEN st .)
    PRINT           reduce using rule 32 (if -> IF cond THEN st .)
    IF              reduce using rule 32 (if -> IF cond THEN st .)
    WHILE           reduce using rule 32 (if -> IF cond THEN st .)
    READ            reduce using rule 32 (if -> IF cond THEN st .)
    ID              reduce using rule 32 (if -> IF cond THEN st .)
    ELSE            shift and go to state 127

  ! ELSE            [ reduce using rule 32 (if -> IF cond THEN st .) ]


state 123

    (17) local -> id COLON typename LBRACKET literal . RBRACKET SEMI

    RBRACKET        shift and go to state 128


state 124

    (27) read -> READ LPAREN id RPAREN SEMI .

    END             reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    BREAK           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    PRINT           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    IF              reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    WHILE           reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    READ            reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    ID              reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)
    ELSE            reduce using rule 27 (read -> READ LPAREN id RPAREN SEMI .)


state 125

    (3) st -> BEGIN statements END .

    END             reduce using rule 3 (st -> BEGIN statements END .)
    BREAK           reduce using rule 3 (st -> BEGIN statements END .)
    PRINT           reduce using rule 3 (st -> BEGIN statements END .)
    IF              reduce using rule 3 (st -> BEGIN statements END .)
    WHILE           reduce using rule 3 (st -> BEGIN statements END .)
    READ            reduce using rule 3 (st -> BEGIN statements END .)
    ID              reduce using rule 3 (st -> BEGIN statements END .)
    ELSE            reduce using rule 3 (st -> BEGIN statements END .)


state 126

    (26) print -> PRINT LPAREN expression RPAREN SEMI .

    END             reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 26 (print -> PRINT LPAREN expression RPAREN SEMI .)


state 127

    (33) if_else -> IF cond THEN st ELSE . st
    (3) st -> . BEGIN statements END
    (4) st -> . statement
    (7) statement -> . assign
    (8) statement -> . print
    (9) statement -> . if
    (10) statement -> . if_else
    (11) statement -> . while
    (12) statement -> . BREAK
    (13) statement -> . read
    (25) assign -> . id ASSIGN expression SEMI
    (26) print -> . PRINT LPAREN expression RPAREN SEMI
    (32) if -> . IF cond THEN st
    (33) if_else -> . IF cond THEN st ELSE st
    (34) while -> . WHILE cond st
    (27) read -> . READ LPAREN id RPAREN SEMI
    (59) id -> . ID
    (60) id -> . ID LBRACKET expression RBRACKET

    BEGIN           shift and go to state 90
    BREAK           shift and go to state 66
    PRINT           shift and go to state 58
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    READ            shift and go to state 56
    ID              shift and go to state 4

    read                           shift and go to state 64
    id                             shift and go to state 60
    st                             shift and go to state 129
    while                          shift and go to state 67
    statement                      shift and go to state 92
    print                          shift and go to state 63
    if_else                        shift and go to state 59
    assign                         shift and go to state 68
    if                             shift and go to state 61

state 128

    (17) local -> id COLON typename LBRACKET literal RBRACKET . SEMI

    SEMI            shift and go to state 130


state 129

    (33) if_else -> IF cond THEN st ELSE st .

    END             reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    BREAK           reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    PRINT           reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    IF              reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    WHILE           reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    READ            reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    ID              reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)
    ELSE            reduce using rule 33 (if_else -> IF cond THEN st ELSE st .)


state 130

    (17) local -> id COLON typename LBRACKET literal RBRACKET SEMI .

    BEGIN           reduce using rule 17 (local -> id COLON typename LBRACKET literal RBRACKET SEMI .)
    ID              reduce using rule 17 (local -> id COLON typename LBRACKET literal RBRACKET SEMI .)

